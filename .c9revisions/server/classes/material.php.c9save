{"ts":1356271359937,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\r\n\r\n/**\r\n  * Represents a material of any type.\r\n  * \r\n  * @param mixed[] $array Array structure to count the elements of.\r\n  *\r\n  * @return int Returns the number of elements.\r\n  */\r\n  \r\n  abstract class Materials{\r\n    \r\n    // Determines when class is ready for use, i.e. it is fully populated.\r\n    private $ready = false;\r\n    \r\n    // Display name of this material\r\n    private $name = \"\";\r\n    \r\n    // Young's modulus of this material\r\n    private $E = 0;\r\n    \r\n    // Shear modulus of this material\r\n    private $G = 0;\r\n    \r\n    // Density\r\n    // [weight/length^3]\r\n    private $density = 0;\r\n    \r\n    // Yield stress\r\n    // 0 for brittle (non-ductile) material\r\n    private $sigY = 0;\r\n    \r\n    //Ultimate tensile strength\r\n    private $sigUlt = 0;\r\n    \r\n    // Stress-strain relationship\r\n    // array of {stress,strain} arrays/objects\r\n    private $stressStrain = array();\r\n    \r\n    // Coefficient of thermal expansion\r\n    private $coefThermExpan = 0;\r\n    \r\n    // Poisson ratio\r\n    private $poissonRatio = 0;\r\n    \r\n    \r\n    \r\n    \r\n      \r\n      \r\n    /**\r\n      * Constructor\r\n      * \r\n      * @param string $materialName Name of the library material to be represented. Else blank.\r\n      * \r\n      */\r\n    public function __construct( $materialName = \"\" ) {\r\n    \r\n      /*\r\n       * No material specified, return blank class to be filled later.\r\n       */\r\n      if($materialName == \"\") {\r\n      \r\n        return $this;\r\n      \r\n      }\r\n      \r\n      \r\n    \r\n    \r\n    \r\n    }\r\n      \r\n  }"]],"start1":0,"start2":0,"length1":0,"length2":1526}]],"length":1526}
