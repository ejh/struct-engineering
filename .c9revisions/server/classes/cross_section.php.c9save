{"ts":1356094307647,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1356094307051,"patch":[[{"diffs":[[1,"<?php\n\n"]],"start1":0,"start2":0,"length1":0,"length2":7}]],"length":7,"saved":false}
{"ts":1356094399065,"patch":[[{"diffs":[[0,"<?php\n\n"],[1,"/**\n  * Counts the number of items in the provided array.\n  *\n  * @param mixed[] $array Array structure to count the elements of.\n  *\n  * @return int Returns the number of elements.\n  */"]],"start1":0,"start2":0,"length1":7,"length2":193}]],"length":193,"saved":false}
{"ts":1356094409531,"patch":[[{"diffs":[[0,"  * "],[-1,"Counts the number of items in the provided array."],[1,"Represents a cross section of any type"],[0,"\n  *"]],"start1":11,"start2":11,"length1":57,"length2":46}]],"length":182,"saved":false}
{"ts":1356094411853,"patch":[[{"diffs":[[0,"any type"],[1,".\n  * \n  * "],[0,"\n  *\n  *"]],"start1":45,"start2":45,"length1":16,"length2":27}]],"length":193,"saved":false}
{"ts":1356094412606,"patch":[[{"diffs":[[0,"e.\n  * \n  * "],[1,"A"],[0,"\n  *\n  * @pa"]],"start1":52,"start2":52,"length1":24,"length2":25}]],"length":194,"saved":false}
{"ts":1356094415394,"patch":[[{"diffs":[[0,"* \n  * A"],[1,"bstract class."],[0,"\n  *\n  *"]],"start1":57,"start2":57,"length1":16,"length2":30}]],"length":208,"saved":false}
{"ts":1356094429321,"patch":[[{"diffs":[[0,"ts.\n  */"],[1,"\n  \n  cl"]],"start1":200,"start2":200,"length1":8,"length2":16}]],"length":216,"saved":false}
{"ts":1356094430976,"patch":[[{"diffs":[[0,"\n  \n  cl"],[1,"ass "]],"start1":208,"start2":208,"length1":8,"length2":12}]],"length":220,"saved":false}
{"ts":1356094432362,"patch":[[{"diffs":[[0,"\n  class"],[-1," "]],"start1":211,"start2":211,"length1":9,"length2":8}]],"length":219,"saved":false}
{"ts":1356094440416,"patch":[[{"diffs":[[0,"*/\n  \n  "],[-1,"class"]],"start1":206,"start2":206,"length1":13,"length2":8}]],"length":214,"saved":false}
{"ts":1356094445608,"patch":[[{"diffs":[[0,".\n  */\n  \n  "],[1,"abstract class "]],"start1":202,"start2":202,"length1":12,"length2":27}]],"length":229,"saved":false}
{"ts":1356094448815,"patch":[[{"diffs":[[0,"t class "],[1,"CrossSection()"]],"start1":221,"start2":221,"length1":8,"length2":22}]],"length":243,"saved":false}
{"ts":1356094454871,"patch":[[{"diffs":[[0,"tion"],[-1,"()"]],"start1":237,"start2":237,"length1":6,"length2":4}]],"length":241,"saved":false}
{"ts":1356094456289,"patch":[[{"diffs":[[0,"CrossSection"],[1,"\n "]],"start1":229,"start2":229,"length1":12,"length2":14}]],"length":243,"saved":false}
{"ts":1356094457721,"patch":[[{"diffs":[[0,"sSection"],[-1,"\n "],[1,"{}"]],"start1":233,"start2":233,"length1":10,"length2":10}]],"length":243,"saved":false}
{"ts":1356094458247,"patch":[[{"diffs":[[0,"ion{"],[-1,"}"]],"start1":238,"start2":238,"length1":5,"length2":4}]],"length":242,"saved":false}
{"ts":1356094458888,"patch":[[{"diffs":[[0,"Section{"],[1,"\n      \n      \n      "]],"start1":234,"start2":234,"length1":8,"length2":29}]],"length":263,"saved":false}
{"ts":1356094460462,"patch":[[{"diffs":[[0,"      \n      \n      "],[1,"\n      \n      \n      \n  }"]],"start1":243,"start2":243,"length1":20,"length2":45}]],"length":288,"saved":false}
{"ts":1356094464655,"patch":[[{"diffs":[[0,"Section{\n      \n"],[-1,"      "],[0,"\n      \n      \n "]],"start1":234,"start2":234,"length1":38,"length2":32}]],"length":282,"saved":false}
{"ts":1356094466216,"patch":[[{"diffs":[[0,"\n      \n"],[1,"    "],[0,"\n      \n"]],"start1":242,"start2":242,"length1":16,"length2":20}]],"length":286,"saved":false}
{"ts":1356094787222,"patch":[[{"diffs":[[0,"\n      \n    "],[1,"/**\n  * Represents a cross section of any type.\n  * \n  * Abstract class.\n  *\n  * @param mixed[] $array Array structure to count the elements of.\n  *\n  * @return int Returns the number of elements.\n  */"],[0,"\n      \n    "]],"start1":242,"start2":242,"length1":24,"length2":225}]],"length":487,"saved":false}
{"ts":1356094791643,"patch":[[{"diffs":[[0,"   \n    /**\n"],[1,"  "],[0,"  * Represen"]],"start1":246,"start2":246,"length1":24,"length2":26}]],"length":489,"saved":false}
{"ts":1356094793089,"patch":[[{"diffs":[[0,"/**\n    "],[1,"  "],[0,"* Repres"]],"start1":254,"start2":254,"length1":16,"length2":18}]],"length":491,"saved":false}
{"ts":1356094797371,"patch":[[{"diffs":[[0,"ract class.\n  *\n"],[1,"    "],[0,"  * @param mixed"]],"start1":319,"start2":319,"length1":32,"length2":36}]],"length":495,"saved":false}
{"ts":1356094799289,"patch":[[{"diffs":[[0,"pe.\n"],[-1,"  * \n  * Abstract class.\n  *\n"],[0,"    "]],"start1":302,"start2":302,"length1":37,"length2":8}]],"length":466,"saved":false}
{"ts":1356094802225,"patch":[[{"diffs":[[0,"of.\n"],[-1,"  *\n  * @return int Returns the number of elements.\n"],[0,"  */"]],"start1":374,"start2":374,"length1":60,"length2":8}]],"length":414,"saved":false}
{"ts":1356094803450,"patch":[[{"diffs":[[0,"nts of.\n"],[1,"  "],[0,"  */\n   "]],"start1":370,"start2":370,"length1":16,"length2":18}]],"length":416,"saved":false}
{"ts":1356094804857,"patch":[[{"diffs":[[0,"of.\n    "],[1,"  "],[0,"*/\n     "]],"start1":374,"start2":374,"length1":16,"length2":18}]],"length":418,"saved":false}
{"ts":1356094806950,"patch":[[{"diffs":[[0,"y type.\n"],[1,"      * \n"],[0,"      * "]],"start1":298,"start2":298,"length1":16,"length2":25}]],"length":427,"saved":false}
{"ts":1356094808330,"patch":[[{"diffs":[[0,"nts of.\n"],[1,"      * \n"],[0,"      */"]],"start1":379,"start2":379,"length1":16,"length2":25}]],"length":436,"saved":false}
{"ts":1356094811776,"patch":[[{"diffs":[[0,"     */\n"],[1,"    \n"],[0,"      \n "]],"start1":397,"start2":397,"length1":16,"length2":21}]],"length":441,"saved":false}
{"ts":1356094831971,"patch":[[{"diffs":[[0,"     */\n    "],[1,"abstract protected function getIxx"],[0,"\n      \n    "]],"start1":397,"start2":397,"length1":24,"length2":58}]],"length":475,"saved":false}
{"ts":1356094832946,"patch":[[{"diffs":[[0,"n getIxx"],[1,"()"],[0,"\n      \n"]],"start1":435,"start2":435,"length1":16,"length2":18}]],"length":477,"saved":false}
{"ts":1356094835135,"patch":[[{"diffs":[[0," getIxx("],[1," "],[0,")\n      "]],"start1":436,"start2":436,"length1":16,"length2":17}]],"length":478,"saved":false}
{"ts":1356094844962,"patch":[[{"diffs":[[0,"Ixx("],[-1," "],[0,")"],[1,";"],[0,"\n   "]],"start1":440,"start2":440,"length1":10,"length2":10}]],"length":478,"saved":false}
{"ts":1356094849205,"patch":[[{"diffs":[[0,"tIxx();\n"],[1,"    \n"],[0,"      \n "]],"start1":439,"start2":439,"length1":16,"length2":21}]],"length":483,"saved":false}
{"ts":1356094855431,"patch":[[{"diffs":[[0,"Ixx();\n    \n"],[1,"    /**\n      * Represents a cross section of any type.\n      * \n      * @param mixed[] $array Array structure to count the elements of.\n      * \n      */\n    abstract protected function getIxx();\n"],[0,"      \n     "]],"start1":440,"start2":440,"length1":24,"length2":221}]],"length":680,"saved":false}
{"ts":1356094860799,"patch":[[{"diffs":[[0,"  * "],[-1,"Represents a cross section of any type."],[1,"Get "],[0,"\n   "]],"start1":262,"start2":262,"length1":47,"length2":12}]],"length":645,"saved":false}
{"ts":1356094866465,"patch":[[{"diffs":[[0,"  * Get "],[1,"second moment of area about the "],[0,"\n      *"]],"start1":262,"start2":262,"length1":16,"length2":48}]],"length":677,"saved":false}
{"ts":1356094869449,"patch":[[{"diffs":[[0,"out the "],[1,"X-X a"],[0,"\n      *"]],"start1":294,"start2":294,"length1":16,"length2":21}]],"length":682,"saved":false}
{"ts":1356094870837,"patch":[[{"diffs":[[0,"he X-X a"],[1,"xis"],[0,"\n      *"]],"start1":299,"start2":299,"length1":16,"length2":19}]],"length":685,"saved":false}
{"ts":1356094875971,"patch":[[{"diffs":[[0,"  * "],[-1,"Represents a cross section of any type."],[1,"Get second moment of area about the X-X axis"],[0,"\n   "]],"start1":469,"start2":469,"length1":47,"length2":52}]],"length":690,"saved":false}
{"ts":1356094878051,"patch":[[{"diffs":[[0," area about the "],[-1,"X-X"],[1,"Y-Y"],[0," axis\n      * \n "]],"start1":493,"start2":493,"length1":35,"length2":35}]],"length":690,"saved":false}
{"ts":1356094937481,"patch":[[{"diffs":[[0,"ed function getI"],[-1,"xx"],[1,"yy"],[0,"();\n      \n     "]],"start1":637,"start2":637,"length1":34,"length2":34}]],"length":690,"saved":false}
{"ts":1356094943147,"patch":[[{"diffs":[[0," * \n"],[-1,"      * @param mixed[] $array Array structure to count the elements of.\n"],[0,"    "]],"start1":523,"start2":523,"length1":80,"length2":8}]],"length":618,"saved":false}
{"ts":1356094948410,"patch":[[{"diffs":[[0,"     * \n"],[-1,"      * \n"],[0,"      */"]],"start1":519,"start2":519,"length1":25,"length2":16}]],"length":609,"saved":false}
{"ts":1356094950881,"patch":[[{"diffs":[[0," * \n"],[-1,"      * @param mixed[] $array Array structure to count the elements of.\n      * \n"],[0,"    "]],"start1":316,"start2":316,"length1":89,"length2":8}]],"length":528,"saved":false}
{"ts":1356094954555,"patch":[[{"diffs":[[0,"Ixx();\n    \n"],[1,"    \n"],[0,"    /**\n    "]],"start1":364,"start2":364,"length1":24,"length2":29}]],"length":533,"saved":false}
{"ts":1356094958970,"patch":[[{"diffs":[[0,"\n      \n"],[1,"      \n      \n"],[0,"  }"]],"start1":522,"start2":522,"length1":11,"length2":25}]],"length":547,"saved":false}
{"contributors":[],"silentsave":true,"ts":1356268036212,"patch":[[{"diffs":[[0,"    \n  }"],[1,"\n  \n  "]],"start1":539,"start2":539,"length1":8,"length2":14}]],"length":553,"saved":false}
{"ts":1356433299143,"patch":[[{"diffs":[[0,"     $is"],[1,"Material = false;"],[0,"\n       "]],"start1":6310,"start2":6310,"length1":16,"length2":33}]],"length":7206,"saved":false}
{"ts":1356453186228,"patch":[[{"diffs":[[0,"s = ($this->"],[-1,"addRectangl"],[1,"squar"],[0,"e() !== true"]],"start1":6517,"start2":6517,"length1":35,"length2":29}]],"length":7200,"saved":false}
{"ts":1356453191647,"patch":[[{"diffs":[[0,"->square"],[1,"IsThere"],[0,"() !== t"]],"start1":6527,"start2":6527,"length1":16,"length2":23}]],"length":7207,"saved":false}
{"ts":1356453200393,"patch":[[{"diffs":[[0,"reIsTher"],[-1,"e"],[0,"("],[1,"e"],[0,") !== tr"]],"start1":6533,"start2":6533,"length1":18,"length2":18}]],"length":7207,"saved":false}
{"ts":1356453267771,"patch":[[{"diffs":[[0,"            "],[-1,"$success = "],[1,"if"],[0,"($this->squa"]],"start1":6498,"start2":6498,"length1":35,"length2":26},{"diffs":[[0,"Ther"],[-1,"(e) !== true ? false : $success);"],[1,"e()){\n                        $success = true;\n                    }"],[0,"\n   "]],"start1":6528,"start2":6528,"length1":41,"length2":76},{"diffs":[[0,"s = ($this->"],[-1,"addCircl"],[1,"circleIsTher"],[0,"e() !== true"]],"start1":6707,"start2":6707,"length1":32,"length2":36}]],"length":7237,"saved":false}
{"ts":1356453275813,"patch":[[{"diffs":[[0,"    "],[-1,"$success = "],[1,"if"],[0,"($this->"],[-1,"circl"],[1,"squar"],[0,"eIsT"]],"start1":6696,"start2":6696,"length1":32,"length2":23},{"diffs":[[0,"re()"],[-1," !== true ? false : $success)"],[1,"){\n                        $success = true;\n                    }\n                    break"],[0,";\n  "]],"start1":6721,"start2":6721,"length1":37,"length2":99}]],"length":7290,"saved":false}
{"contributors":[],"silentsave":true,"ts":1356536489652,"patch":[[{"diffs":[[0,"  * "],[-1,"Abstract class.\n  *\n  * @param mixed[] $array Array structure to count the elements of.\n  *\n  * @return int Returns the number of elements.\n  */\n  \n  abstract class CrossSection{\n      \n    /**\n      * Get second moment of area about the X-X axis\n      * \n      */\n    abstract protected function getIxx();\n    \n    \n    /**\n      * Get second moment of area about the Y-Y axis\n      * \n      */\n    abstract protected function getIyy();\n      \n      \n      \n      \n      Material = false;\n      \n  }\n  \n  "],[1,"@param mixed[] $array Array structure to count the elements of.\n  *\n  * @return int Returns the number of elements.\n  */\n  \n  class CrossSection{\n      \n    private $ready = false;\n    \n    //parts holds all the shapes that make up the cross-section\n    private $parts = array();\n      \n    private static $xDiv = 1000;\n    private static $yDiv = 1000;\n      \n    public function __construct( $input = \"\" ) {\n        \n      if($input === \"\"){\n        return $this;\n      \n      \n      /*\n       * Input is an array containing an array comprising 'part's \n       * that together make up the cross section:\n       *  - {type:rectangle,width:x,height:y,[bottom:x,][left:y]}\n       *  - {type:circle,x:x,y:y,radius:r}\n       *  - {type:points,points:[{x,y},etc]}\n       *\n       * Any 'part' can have the void:true option set, this creates a void.\n       *\n       */\n        \n    }\n     \n     \n    /**\n      * Add a number of parts\n      * \n      * @param array The parts to add.\n      * \n      * @return boolean Returns a boolean for whether the action was entirely successful.\n      * \n      */\n    public function addParts($parts) {\n        \n        $success = true;\n        \n        foreach($parts as $part){\n            \n            switch($part['type']) {\n                \n                case 'rectangle':\n                    $success = ($this->addRectangle() !== true ? false : $success);\n                    break;\n                    \n                case 'circle':\n                    $success = ($this->addCircle() !== true ? false : $success);\n                    break;\n                    \n                case 'points':\n                    $success = ($this->addPoints() !== true ? false : $success);\n                    break;\n                \n            }\n            \n        }\n        \n        return $success;\n        \n    }\n    \n    /**\n      * Add a rectangle\n      * \n      * @param array The rectangle to add.\n      * \n      * @return boolean Returns a boolean for whether the action was entirely successful.\n      * \n      */\n    public function addRectangle($rect) {\n        /* A rectangle must have:\n         *  - width\n         *  - height\n         *\n         * It must have two of:\n         *  - bottom, top, left, right, midX, midY (default is midX=midY=0)\n         *\n         */\n         \n        $hasWidth = (isset($rect['width']) && $rect['width']>0 ? true : false);\n        $hasHeight = (isset($rect['height']) && $rect['height']>0 ? true : false);\n        \n        $hasMidY = (isset($rect['midY']) && is_numeric($rect['midY']) ? true : false);\n        $hasBottom = (isset($rect['bottom']) && is_numeric($rect['bottom']) ? true : false);\n        $hasTop = (isset($rect['top']) && is_numeric($rect['top']) ? true : false);\n        $hasYCoord = $hasBottom || $hasTop || $hasMidY;\n        \n        $hasMidX = (isset($rect['midX']) && is_numeric($rect['midX']) ? true : false);\n        $hasLeft = (isset($rect['left']) && is_numeric($rect['left']) ? true : false);\n        $hasRight = (isset($rect['right']) && is_numeric($rect['right']) ? true : false);\n        $hasXCoord = $hasLeft || $hasRight || $hasMidX;\n        \n        if(!($hasWidth && $hasHeight && $hasYCoord && $hasXCoord)){\n            //either doesn't have width of height\n            return false;\n        }\n        \n        //Definitely have width and height, grab them:\n        $width = (float) $rect['width'];\n        $height = (float) $rect['height'];\n        \n        //we have enough info\n        //find values of midX and midY, we'll use those\n        if($hasMidX){\n            $midX = (float) $rect['midX'];\n        }elseif($hasLeft){\n            $midX = $rect['left'] + ($width/2);\n        }elseif($hasRight){\n            $midX = $rect['right'] - ($width/2)\n        }else{\n            return false;\n        }\n        \n        if($hasMidY){\n            $midY = (float) $rect['midY'];\n        }elseif($hasTop){\n            $midY = $rect['top'] - ($height/2);\n        }elseif($hasBottom){\n            $midY = $rect['bottom'] + ($height/2)\n        }else{\n            return false;\n        }\n        \n        //{type:rectangle,width:x,height:y,[bottom:x,][left:y]}\n        $this->parts[] = array(\n            \"type\"=>\"rectangle\",\n            \"width\"=>$width,\n            \"height\"=>$height,\n            \"midX\"=>$midX,\n            \"midY\"=>$midY\n        );\n        \n    }\n    \n    /**\n      * Add a Circle\n      * \n      * @param array The circle to add.\n      * \n      * @return boolean Returns a boolean for whether the action was entirely successful.\n      * \n      */\n    public function addCircle($circ) {\n        \n        /* A circle must have x,y,r\n         *  (x and y represent the midpoint)\n         *  (other options could be added here)\n         */\n         \n        $hasX = (isset($circ['x']) && is_numeric($circ['x']) ? true : false); \n        $hasY = (isset($circ['y']) && is_numeric($circ['y']) ? true : false); \n        $hasR = (isset($circ['r']) && is_numeric($circ['r']) ? true : false);\n        \n        if(!($hasX && $hasY && $hasR)){\n            return false;\n        }\n        \n        $this->parts[] = array(\n            \"type\"=>\"circle\",\n            \"x\"=> (float) $circ['x'],\n            \"y\"=> (float) $circ['y'],\n            \"r\"=> (float) $circ['r'],\n        );\n        \n    }\n    \n    /**\n      * Add some Points\n      * \n      * @param array The points to add.\n      * \n      * @return boolean Returns a boolean for whether the action was entirely successful.\n      * \n      */\n    public function addPoints($points) {\n        \n    }\n    \n     \n    /**\n      * Get second moment of area about the X-X axis\n      * \n      * @return float The second moment of area about the X-X axis\n      * \n      */\n    public function getIxx() {\n        \n        $xDiv = $this::xDiv;\n        $yDiv = $this::yDiv;\n        \n        /*\n         * Ixx = integral( A * y^2 ).dx\n         *\n         * Need to find the size of the cross section\n         */\n         \n        $bounds = $this->getbounds();\n        $height = $bounds['n'] - $bounds['s'];\n        $width = $bounds['e'] - $bounds['w'];\n        \n        $xSlice = $width / $xDiv;\n        $ySlice = $height / $yDiv;\n        \n        for($x = (-$xSlice/2); $x < ($xSlice/2); $x++){\n            \n            for($y = 0; $y < $yDiv; $y++){\n                \n                \n                \n            }\n            \n        }\n        \n    }\n    \n    \n    /**\n      * Get second moment of area about the Y-Y axis\n      * \n      * @return float The second moment of area about the Y-Y axis\n      * \n      */\n    public function getIyy() {\n        \n      \n    }\n    \n    /**\n      * Get all the parts that make up this cross-section\n      * \n      * @return array Get all the parts that make up this cross-section\n      * \n      */\n    public function getParts() {\n        \n        return $this->parts;\n      \n    }\n     \n     \n    /**\n      * Determine whether there is material at a particular point\n      * \n      * @param //TODO\n      * \n      * @return array Determine whether there is material at a particular point\n      * \n      */\n    private function materialAtPoint($x = false, $y = false) {\n        \n        $isMaterial = false;\n        \n        foreach($this->getParts() as $part){\n            \n            switch($part['type']) {\n                \n                case 'rectangle':\n                    if($this->squareIsThere($part, $x, $y)){\n                        $success = true;\n                    }\n                    break;\n                    \n                case 'circle':\n                    if($this->circleIsThere($x, $y)){\n                        $success = true;\n                    }\n                    break;\n                    \n                case 'points':\n                    if($this->pointsIsThere($x, $y)){\n                        $success = true;\n                    }\n                    break;\n                \n            }\n            \n            if($success === true){\n                //we've found some material, call off the search\n                break;\n            }\n            \n        }\n        \n        return $success;\n        \n    }\n    \n    private function squareIsThere($part = false, $x = false, $y = false) {\n        \n        if(!$part){\n            return false;\n        }\n        \n        /*\n         *  We have:\n         *   - width, height, midX, midY\n         *\n         */\n         \n        if($part['midX'] + ($part['width']/2) >= $x)\n            && $part['midX'] - ($part['width']/2) <= $x)\n            && $part['midY'] + ($part['height']/2) >= $y)\n            && $part['midY'] - ($part['height']/2) <= $y)){\n            \n            return true;\n            \n        }else{\n            return false;\n        }\n        \n    }\n    \n    private function circleIsThere($part = false, $x = false, $y = false) {\n        \n        if(!($part && $x && $y)){\n            return false;\n        }\n        \n        /*\n         *  We have:\n         *   - x, y, r\n         *\n         *  Circle equation is:\n         *   ((x-a)^2) + ((y-b)^2) = r^2\n         *\n         */\n         \n        $a = $part['x'];\n        $b = $part['y'];\n        $r = $part['r'];\n        \n        $lhs = (($x - $a)^2) + (($y - $b)^2);\n        \n        if($lhs <= ($r^2)){\n            return true;\n        }\n        else{\n            return false;\n        }\n        \n    }\n    \n    public function getBounds() {\n        \n        //get the bounds of all parts\n        \n        $n = -INF;\n        $s = INF;\n        $e = -INF;\n        $w = INF;\n        \n        foreach($this->parts as $part) {\n            \n            switch($part['type']) {\n                \n                case 'rectangle':\n                    $b = $this->rectBounds($part);\n                    $n = ( $b['n'] > $n ? $b['n'] : $n );\n                    $s = ( $b['s'] < $s ? $b['s'] : $s );\n                    $e = ( $b['e'] > $e ? $b['e'] : $e );\n                    $w = ( $b['w'] < $w ? $b['w'] : $w );\n                    break;\n                    \n                case 'circle':\n                    $b = $this->circBounds($part);\n                    $n = ( $b['n'] > $n ? $b['n'] : $n );\n                    $s = ( $b['s'] < $s ? $b['s'] : $s );\n                    $e = ( $b['e'] > $e ? $b['e'] : $e );\n                    $w = ( $b['w'] < $w ? $b['w'] : $w );\n                    break;\n                    \n                case 'points':\n                    $b = $this->pointsBounds($part);\n                    $n = ( $b['n'] > $n ? $b['n'] : $n );\n                    $s = ( $b['s'] < $s ? $b['s'] : $s );\n                    $e = ( $b['e'] > $e ? $b['e'] : $e );\n                    $w = ( $b['w'] < $w ? $b['w'] : $w );\n                    break;\n                \n            }\n            \n        }\n        \n        return array(\n            \"n\"=>$n,  \n            \"s\"=>$s,\n            \"e\"=>$e,\n            \"w\"=>$w\n        );\n        \n    }\n    \n    private function rectBounds($part) {\n        \n        return array(\n            \"n\"=>$part['midY'] + ($part['height']/2),\n            \"s\"=>$part['midY'] - ($part['height']/2),\n            \"e\"=>$part['midX'] + ($part['width']/2),\n            \"w\"=>$part['midX'] - ($part['width']/2)\n        );\n        \n    }\n    \n    private function circBounds($part) {\n        \n        return array(\n            \"n\"=>$part['y'] + $part['r'],\n            \"s\"=>$part['y'] - $part['r'],\n            \"e\"=>$part['x'] + $part['r'],\n            \"w\"=>$part['x'] - $part['r']\n        );\n        \n    }\n      \n      \n  }\n  \n  $rect = array(\n      \"type\"=>\"rectangle\",\n      \"width\"=>10,\n      \"height\"=>10,\n      \"left\"=>-5,\n      \"top\"=>5\n      );\n  \n  $cs = new CrossSection($rect);\n  \n  echo $cs->getParts();\n  \n  ?>"]],"start1":60,"start2":60,"length1":510,"length2":11719}]],"length":11779,"saved":false}
{"ts":1356536496350,"patch":[[{"diffs":[[0,"this;\n      "],[1,"}"],[0,"\n      \n    "]],"start1":523,"start2":523,"length1":24,"length2":25}]],"length":11780,"saved":false}
{"ts":1356599935093,"patch":[[{"diffs":[[0,"*/\n        \n    "],[-1,"}"],[0,"\n     \n     \n   "]],"start1":925,"start2":925,"length1":33,"length2":32}]],"length":11779,"saved":false}
{"ts":1356599941872,"patch":[[{"diffs":[[0,"       \n    "],[1,"}"],[0,"\n     \n     "]],"start1":929,"start2":929,"length1":24,"length2":25}]],"length":11780,"saved":false}
{"ts":1356600195661,"patch":[[{"diffs":[[0,"width/2)"],[1,";"],[0,"\n       "]],"start1":3817,"start2":3817,"length1":16,"length2":17}]],"length":11781,"saved":false}
{"ts":1356600198535,"patch":[[{"diffs":[[0,"eight/2)"],[1,";"],[0,"\n       "]],"start1":4096,"start2":4096,"length1":16,"length2":17}]],"length":11782,"saved":false}
{"ts":1356600220079,"patch":[[{"diffs":[[0,"  * Add "],[1,"a shape based on "],[0,"some Poi"]],"start1":5382,"start2":5382,"length1":16,"length2":33}]],"length":11799,"saved":false}
{"ts":1356600310998,"patch":[[{"diffs":[[0,"\n            && "],[1,"("],[0,"$part['midX'] - "]],"start1":8545,"start2":8545,"length1":32,"length2":33}]],"length":11800,"saved":false}
{"ts":1356600312763,"patch":[[{"diffs":[[0,"['width']/2)"],[1,")"],[0," <= $x)\n    "]],"start1":8584,"start2":8584,"length1":24,"length2":25}]],"length":11801,"saved":false}
{"ts":1356600320749,"patch":[[{"diffs":[[0,"     && "],[-1,"("],[0,"$part['m"]],"start1":8553,"start2":8553,"length1":17,"length2":16},{"diffs":[[0,"dth']/2)"],[-1,")"],[0," <= $x)\n"]],"start1":8587,"start2":8587,"length1":17,"length2":16}]],"length":11799,"saved":false}
{"ts":1356600333480,"patch":[[{"diffs":[[0,"h']/2) <= $x"],[-1,")"],[0,"\n           "]],"start1":8589,"start2":8589,"length1":25,"length2":24}]],"length":11798,"saved":false}
{"ts":1356600336170,"patch":[[{"diffs":[[0,"2) >= $y"],[-1,")"],[0,"\n       "]],"start1":8650,"start2":8650,"length1":17,"length2":16}]],"length":11797,"saved":false}
{"ts":1356600339591,"patch":[[{"diffs":[[0,"']/2) <= $y)"],[-1,")"],[0,"{\n          "]],"start1":8704,"start2":8704,"length1":25,"length2":24}]],"length":11796,"saved":false}
{"ts":1356600349805,"patch":[[{"diffs":[[0,"2) >= $x"],[-1,")"],[0,"\n       "]],"start1":8536,"start2":8536,"length1":17,"length2":16}]],"length":11795,"saved":false}
{"ts":1356600651041,"patch":[[{"diffs":[[0,"Div = 1000;\n"],[1,"    \n    \n"],[0,"      \n    p"]],"start1":405,"start2":405,"length1":24,"length2":34}]],"length":11805,"saved":false}
{"ts":1356600653170,"patch":[[{"diffs":[[0,"rray();\n    "],[1,"\n    /\n  "],[0,"  \n    priva"]],"start1":336,"start2":336,"length1":24,"length2":33}]],"length":11814,"saved":false}
{"ts":1356600654717,"patch":[[{"diffs":[[0,"  \n    /"],[1,"/"],[0,"\n    \n  "]],"start1":346,"start2":346,"length1":16,"length2":17}]],"length":11815,"saved":false}
{"ts":1356600659382,"patch":[[{"diffs":[[0,"  \n    /"],[-1,"/"],[1,"*\n     "],[0,"\n    \n  "]],"start1":346,"start2":346,"length1":17,"length2":23}]],"length":11821,"saved":false}
{"ts":1356600660828,"patch":[[{"diffs":[[0,"    \n    /*\n"],[1,"     *\n     *\n"],[0,"     \n    \n "]],"start1":344,"start2":344,"length1":24,"length2":38}]],"length":11835,"saved":false}
{"ts":1356600662255,"patch":[[{"diffs":[[0,"     *\n     "],[1,"*/"],[0,"\n    \n    pr"]],"start1":363,"start2":363,"length1":24,"length2":26}]],"length":11837,"saved":false}
{"ts":1356600663224,"patch":[[{"diffs":[[0,"   /*\n     *"],[1," M"],[0,"\n     *\n    "]],"start1":350,"start2":350,"length1":24,"length2":26}]],"length":11839,"saved":false}
{"ts":1356600666873,"patch":[[{"diffs":[[0,"     * M"],[1,"aterial properties\n     *"],[0,"\n     *\n"]],"start1":356,"start2":356,"length1":16,"length2":41}]],"length":11864,"saved":false}
{"ts":1356600667857,"patch":[[{"diffs":[[0,"rties\n     *"],[1," "],[0,"\n     *\n    "]],"start1":377,"start2":377,"length1":24,"length2":25}]],"length":11865,"saved":false}
{"ts":1356600735912,"patch":[[{"diffs":[[0,"  * "],[-1,"Material properties\n     * "],[1,"Sectional properties\n     *  Each sectional property has two properties\n     *  The first holds the actual property\n     *  The second states the validity of that property."],[0,"\n   "]],"start1":359,"start2":359,"length1":35,"length2":180}]],"length":12010,"saved":false}
{"ts":1356601734522,"patch":[[{"diffs":[[0,"    */\n    \n"],[1,"     \n    \n"],[0,"    private "]],"start1":544,"start2":544,"length1":24,"length2":35}]],"length":12021,"saved":false}
{"ts":1356601735757,"patch":[[{"diffs":[[0,"     */\n    "],[1,"//"],[0,"\n     \n    \n"]],"start1":543,"start2":543,"length1":24,"length2":26}]],"length":12023,"saved":false}
{"ts":1356601739282,"patch":[[{"diffs":[[0,"/\n    //"],[1,"Ixx\n    priv"],[0,"\n     \n "]],"start1":549,"start2":549,"length1":16,"length2":28}]],"length":12035,"saved":false}
{"ts":1356601740208,"patch":[[{"diffs":[[0,"    priv"],[1,"ate $"],[0,"\n     \n "]],"start1":561,"start2":561,"length1":16,"length2":21}]],"length":12040,"saved":false}
{"ts":1356601745319,"patch":[[{"diffs":[[0,"rivate $"],[1,"Ixx"],[0,"\n     \n "]],"start1":566,"start2":566,"length1":16,"length2":19}]],"length":12043,"saved":false}
{"ts":1356601746345,"patch":[[{"diffs":[[0,"ate $Ixx"],[1," = 0"],[0,"\n     \n "]],"start1":569,"start2":569,"length1":16,"length2":20}]],"length":12047,"saved":false}
{"ts":1356601748567,"patch":[[{"diffs":[[0,"$Ixx = 0"],[1,";\n    pri"],[0,"\n     \n "]],"start1":573,"start2":573,"length1":16,"length2":25}]],"length":12056,"saved":false}
{"ts":1356601751373,"patch":[[{"diffs":[[0,"\n    pri"],[1,"vate $i"],[0,"\n     \n "]],"start1":582,"start2":582,"length1":16,"length2":23}]],"length":12063,"saved":false}
{"ts":1356601752371,"patch":[[{"diffs":[[0,"ivate $i"],[1,"xxV"],[0,"\n     \n "]],"start1":589,"start2":589,"length1":16,"length2":19}]],"length":12066,"saved":false}
{"ts":1356601754363,"patch":[[{"diffs":[[0,"te $ixxV"],[1,"alid "],[0,"\n     \n "]],"start1":592,"start2":592,"length1":16,"length2":21}]],"length":12071,"saved":false}
{"ts":1356601756027,"patch":[[{"diffs":[[0,"xxValid "],[1,"= false;"],[0,"\n     \n "]],"start1":597,"start2":597,"length1":16,"length2":24}]],"length":12079,"saved":false}
{"ts":1356601757984,"patch":[[{"diffs":[[0,"id = false;\n"],[1,"    \n"],[0,"     \n    \n "]],"start1":602,"start2":602,"length1":24,"length2":29}]],"length":12084,"saved":false}
{"ts":1356601760043,"patch":[[{"diffs":[[0," false;\n    "],[1,"//Iyy\n    pr"],[0,"\n     \n    \n"]],"start1":606,"start2":606,"length1":24,"length2":36}]],"length":12096,"saved":false}
{"ts":1356601763428,"patch":[[{"diffs":[[0,"y\n    pr"],[1,"ivate $Iyy = 0"],[0,"\n     \n "]],"start1":622,"start2":622,"length1":16,"length2":30}]],"length":12110,"saved":false}
{"ts":1356601764339,"patch":[[{"diffs":[[0,"$Iyy = 0"],[1,";\n    "],[0,"\n     \n "]],"start1":636,"start2":636,"length1":16,"length2":22}]],"length":12116,"saved":false}
{"ts":1356601765548,"patch":[[{"diffs":[[0,"yy = 0;\n    "],[1,"private"],[0,"\n     \n    \n"]],"start1":638,"start2":638,"length1":24,"length2":31}]],"length":12123,"saved":false}
{"ts":1356601770072,"patch":[[{"diffs":[[0," private"],[1," $iyyValid = false;\n    "],[0,"\n     \n "]],"start1":649,"start2":649,"length1":16,"length2":40}]],"length":12147,"saved":false}
{"ts":1356601771276,"patch":[[{"diffs":[[0," false;\n    "],[1,"//"],[0,"\n     \n    \n"]],"start1":669,"start2":669,"length1":24,"length2":26}]],"length":12149,"saved":false}
{"ts":1356601772814,"patch":[[{"diffs":[[0,";\n    //"],[1,"A"],[0,"\n     \n "]],"start1":675,"start2":675,"length1":16,"length2":17}]],"length":12150,"saved":false}
{"ts":1356601774027,"patch":[[{"diffs":[[0,"    //A\n"],[1,"    \n"],[0,"     \n  "]],"start1":677,"start2":677,"length1":16,"length2":21}]],"length":12155,"saved":false}
{"ts":1356601777899,"patch":[[{"diffs":[[0,"    //A\n"],[1,"    private $A = 0;\n"],[0,"    \n   "]],"start1":677,"start2":677,"length1":16,"length2":36}]],"length":12175,"saved":false}
{"ts":1356601779281,"patch":[[{"diffs":[[0,"$A = 0;\n    "],[1,"private "],[0,"\n     \n    \n"]],"start1":697,"start2":697,"length1":24,"length2":32}]],"length":12183,"saved":false}
{"ts":1356601780679,"patch":[[{"diffs":[[0,"private "],[1,"$aV"],[0,"\n     \n "]],"start1":709,"start2":709,"length1":16,"length2":19}]],"length":12186,"saved":false}
{"ts":1356601783453,"patch":[[{"diffs":[[0,"vate $aV"],[1,"alid = false;\n    "],[0,"\n     \n "]],"start1":712,"start2":712,"length1":16,"length2":34}]],"length":12204,"saved":false}
{"ts":1356601801207,"patch":[[{"diffs":[[0," true;\n        \n"],[1,"        \n        \n"],[0,"        foreach("]],"start1":1633,"start2":1633,"length1":32,"length2":50}]],"length":12222,"saved":false}
{"ts":1356601802273,"patch":[[{"diffs":[[0,"       \n        "],[1,"if()"],[0,"\n        \n      "]],"start1":1641,"start2":1641,"length1":32,"length2":36}]],"length":12226,"saved":false}
{"ts":1356601804024,"patch":[[{"diffs":[[0,"     if("],[1,"count"],[0,")\n      "]],"start1":1652,"start2":1652,"length1":16,"length2":21}]],"length":12231,"saved":false}
{"ts":1356601806925,"patch":[[{"diffs":[[0,"if(count"],[1,"($parts"],[0,")\n      "]],"start1":1657,"start2":1657,"length1":16,"length2":23}]],"length":12238,"saved":false}
{"ts":1356601808088,"patch":[[{"diffs":[[0,"($parts)"],[1,")_"],[0,"\n       "]],"start1":1665,"start2":1665,"length1":16,"length2":18}]],"length":12240,"saved":false}
{"ts":1356601809628,"patch":[[{"diffs":[[0,"rts)"],[-1,")_"],[1,"<"],[0,"\n   "]],"start1":1669,"start2":1669,"length1":10,"length2":9}]],"length":12239,"saved":false}
{"ts":1356601812922,"patch":[[{"diffs":[[0,"($parts)"],[-1,"<"],[1,">0){"],[0,"\n       "]],"start1":1665,"start2":1665,"length1":17,"length2":20}]],"length":12242,"saved":false}
{"ts":1356601819051,"patch":[[{"diffs":[[0,"ts)>0){\n"],[1,"            $this\n        }\n"],[0,"        "]],"start1":1670,"start2":1670,"length1":16,"length2":44}]],"length":12270,"saved":false}
{"ts":1356601825047,"patch":[[{"diffs":[[0,"   $this"],[1,"->invalidate();"],[0,"\n       "]],"start1":1687,"start2":1687,"length1":16,"length2":31}]],"length":12285,"saved":false}
{"ts":1356601837753,"patch":[[{"diffs":[[0,"\n    }\n    \n"],[1,"    public \n"],[0,"     \n    /*"]],"start1":6124,"start2":6124,"length1":24,"length2":36}]],"length":12297,"saved":false}
{"ts":1356601840141,"patch":[[{"diffs":[[0,"  \n    p"],[-1,"ublic "],[1,"riv"],[0,"\n     \n "]],"start1":6133,"start2":6133,"length1":22,"length2":19}]],"length":12294,"saved":false}
{"ts":1356601844053,"patch":[[{"diffs":[[0,"    priv"],[1,"ate function "],[0,"\n     \n "]],"start1":6136,"start2":6136,"length1":16,"length2":29}]],"length":12307,"saved":false}
{"ts":1356601850022,"patch":[[{"diffs":[[0,"unction "],[1,"invalidate() {"],[0,"\n     \n "]],"start1":6149,"start2":6149,"length1":16,"length2":30}]],"length":12321,"saved":false}
{"ts":1356601850969,"patch":[[{"diffs":[[0,"alidate() {\n"],[1,"        \n"],[0,"     \n    /*"]],"start1":6160,"start2":6160,"length1":24,"length2":33}]],"length":12330,"saved":false}
{"ts":1356601852008,"patch":[[{"diffs":[[0," {\n        \n"],[1,"    }\n"],[0,"     \n    /*"]],"start1":6169,"start2":6169,"length1":24,"length2":30}]],"length":12336,"saved":false}
{"ts":1356601853288,"patch":[[{"diffs":[[0,"alidate() {\n"],[-1,"        "],[0,"\n    }\n     "]],"start1":6160,"start2":6160,"length1":32,"length2":24}]],"length":12328,"saved":false}
{"ts":1356601854405,"patch":[[{"diffs":[[0,"ate() {\n"],[1,"        "],[0,"\n    }\n "]],"start1":6164,"start2":6164,"length1":16,"length2":24}]],"length":12336,"saved":false}
{"ts":1356601856454,"patch":[[{"diffs":[[0,"te() {\n        \n"],[1,"        \n        \n"],[0,"    }\n     \n    "]],"start1":6165,"start2":6165,"length1":32,"length2":50}]],"length":12354,"saved":false}
{"ts":1356601857495,"patch":[[{"diffs":[[0,"       \n        "],[1,"$this->"],[0,"\n        \n    }\n"]],"start1":6173,"start2":6173,"length1":32,"length2":39}]],"length":12361,"saved":false}
{"ts":1356601858864,"patch":[[{"diffs":[[0," $this->"],[1,"ui"],[0,"\n       "]],"start1":6188,"start2":6188,"length1":16,"length2":18}]],"length":12363,"saved":false}
{"ts":1356601863356,"patch":[[{"diffs":[[0,"is->"],[-1,"u"],[0,"i"],[1,"yyValid = false;\n        $"],[0,"\n   "]],"start1":6192,"start2":6192,"length1":10,"length2":35}]],"length":12388,"saved":false}
{"ts":1356601866218,"patch":[[{"diffs":[[0,"       $"],[1,"this->ixx"],[0,"\n       "]],"start1":6215,"start2":6215,"length1":16,"length2":25}]],"length":12397,"saved":false}
{"ts":1356601868930,"patch":[[{"diffs":[[0,"his->ixx"],[1,"Valid = false;\n        "],[0,"\n       "]],"start1":6224,"start2":6224,"length1":16,"length2":39}]],"length":12420,"saved":false}
{"ts":1356601871050,"patch":[[{"diffs":[[0," false;\n        "],[1,"$this->A"],[0,"\n        \n    }\n"]],"start1":6239,"start2":6239,"length1":32,"length2":40}]],"length":12428,"saved":false}
{"ts":1356601872198,"patch":[[{"diffs":[[0,"$this->A"],[1," "],[0,"\n       "]],"start1":6255,"start2":6255,"length1":16,"length2":17}]],"length":12429,"saved":false}
{"ts":1356601873309,"patch":[[{"diffs":[[0," $this->"],[-1,"A "],[1,"a"],[0,"\n       "]],"start1":6254,"start2":6254,"length1":18,"length2":17}]],"length":12428,"saved":false}
{"ts":1356601876376,"patch":[[{"diffs":[[0,"$this->a"],[1,"Valid = false;"],[0,"\n       "]],"start1":6255,"start2":6255,"length1":16,"length2":30}]],"length":12442,"saved":false}
{"ts":1356601879264,"patch":[[{"diffs":[[0,"s->aValid = fals"],[-1,"e"],[0,";"],[1,"e"],[0,"\n        \n    }\n"]],"start1":6259,"start2":6259,"length1":34,"length2":34}]],"length":12442,"saved":false}
{"ts":1356601975764,"patch":[[{"diffs":[[0,"fals"],[-1,";"],[0,"e"],[1,";\n        $this->"],[0,"\n   "]],"start1":6271,"start2":6271,"length1":10,"length2":26}]],"length":12458,"saved":false}
{"ts":1356601981895,"patch":[[{"diffs":[[0," $this->"],[1,"ycValid = false;\n        "],[0,"\n       "]],"start1":6285,"start2":6285,"length1":16,"length2":41}]],"length":12483,"saved":false}
{"ts":1356601983274,"patch":[[{"diffs":[[0," false;\n        "],[1,"$"],[0,"\n        \n    }\n"]],"start1":6302,"start2":6302,"length1":32,"length2":33}]],"length":12484,"saved":false}
{"ts":1356601986028,"patch":[[{"diffs":[[0,"       $"],[1,"this->xcValid "],[0,"\n       "]],"start1":6311,"start2":6311,"length1":16,"length2":30}]],"length":12498,"saved":false}
{"ts":1356601989028,"patch":[[{"diffs":[[0,"xcValid "],[1,"= false;"],[0,"\n       "]],"start1":6325,"start2":6325,"length1":16,"length2":24}]],"length":12506,"saved":false}
{"ts":1356601996075,"patch":[[{"diffs":[[0,"false;\n        \n"],[1,"        return;\n        \n"],[0,"    }\n     \n    "]],"start1":6335,"start2":6335,"length1":32,"length2":57}]],"length":12531,"saved":false}
{"ts":1356602004998,"patch":[[{"diffs":[[0,"aValid = false;\n"],[1,"    //\n"],[0,"    \n     \n    \n"]],"start1":718,"start2":718,"length1":32,"length2":39}]],"length":12538,"saved":false}
{"ts":1356602008485,"patch":[[{"diffs":[[0,";\n    //"],[1,"Centroid y"],[0,"\n    \n  "]],"start1":732,"start2":732,"length1":16,"length2":26}]],"length":12548,"saved":false}
{"ts":1356602009754,"patch":[[{"diffs":[[0,"ntroid y"],[1," "],[0,"\n    \n  "]],"start1":742,"start2":742,"length1":16,"length2":17}]],"length":12549,"saved":false}
{"ts":1356602011974,"patch":[[{"diffs":[[0,"troid y "],[1,"dim\n    o"],[0,"\n    \n  "]],"start1":743,"start2":743,"length1":16,"length2":25}]],"length":12558,"saved":false}
{"ts":1356602014986,"patch":[[{"diffs":[[0,"dim\n    "],[-1,"o"],[1,"private $Yc"],[0,"\n    \n  "]],"start1":751,"start2":751,"length1":17,"length2":27}]],"length":12568,"saved":false}
{"ts":1356602016289,"patch":[[{"diffs":[[0,"vate $Yc"],[1," = "],[0,"\n    \n  "]],"start1":762,"start2":762,"length1":16,"length2":19}]],"length":12571,"saved":false}
{"ts":1356602018121,"patch":[[{"diffs":[[0,"e $Yc = "],[1,"0;\n    priv"],[0,"\n    \n  "]],"start1":765,"start2":765,"length1":16,"length2":27}]],"length":12582,"saved":false}
{"ts":1356602020334,"patch":[[{"diffs":[[0,"    priv"],[1,"ate $yc"],[0,"\n    \n  "]],"start1":776,"start2":776,"length1":16,"length2":23}]],"length":12589,"saved":false}
{"ts":1356602021297,"patch":[[{"diffs":[[0,"vate $yc"],[1,"Valid ="],[0,"\n    \n  "]],"start1":783,"start2":783,"length1":16,"length2":23}]],"length":12596,"saved":false}
{"ts":1356602023989,"patch":[[{"diffs":[[0,"cValid ="],[1," false;\n    //Cen"],[0,"\n    \n  "]],"start1":790,"start2":790,"length1":16,"length2":33}]],"length":12613,"saved":false}
{"ts":1356602026793,"patch":[[{"diffs":[[0,"d y "],[-1,"dim"],[1,"coord"],[0,"\n   "]],"start1":747,"start2":747,"length1":11,"length2":13},{"diffs":[[0,"   //Cen"],[1,"troid"],[0,"\n    \n  "]],"start1":809,"start2":809,"length1":16,"length2":21}]],"length":12620,"saved":false}
{"ts":1356602027792,"patch":[[{"diffs":[[0,"Centroid"],[1," "],[0,"\n    \n  "]],"start1":814,"start2":814,"length1":16,"length2":17}]],"length":12621,"saved":false}
{"ts":1356602028740,"patch":[[{"diffs":[[0,"entroid "],[1,"x vco"],[0,"\n    \n  "]],"start1":815,"start2":815,"length1":16,"length2":21}]],"length":12626,"saved":false}
{"ts":1356602029965,"patch":[[{"diffs":[[0,"d x "],[-1,"v"],[0,"co"],[1,"ord"],[0,"\n   "]],"start1":821,"start2":821,"length1":11,"length2":13}]],"length":12628,"saved":false}
{"ts":1356602033826,"patch":[[{"diffs":[[0,"oid x coord\n"],[1,"    private $Xc\n"],[0,"    \n     \n "]],"start1":819,"start2":819,"length1":24,"length2":40}]],"length":12644,"saved":false}
{"ts":1356602040435,"patch":[[{"diffs":[[0,"vate $Xc"],[1," = 0;\n    private $xcValid = false;"],[0,"\n    \n  "]],"start1":838,"start2":838,"length1":16,"length2":51}]],"length":12679,"saved":false}
{"ts":1356602062438,"patch":[[{"diffs":[[0,"rivate $"],[-1,"X"],[0,"c = 0;\n "]],"start1":836,"start2":836,"length1":17,"length2":16}]],"length":12678,"saved":false}
{"ts":1356602067240,"patch":[[{"diffs":[[0,"rivate $"],[1,"X"],[0,"c = 0;\n "]],"start1":836,"start2":836,"length1":16,"length2":17}]],"length":12679,"saved":false}
{"ts":1356602230525,"patch":[[{"diffs":[[0,"$yDiv;\n        \n"],[1,"        \n        \n"],[0,"        for($x ="]],"start1":7138,"start2":7138,"length1":32,"length2":50}]],"length":12697,"saved":false}
{"ts":1356602233697,"patch":[[{"diffs":[[0,"       \n        "],[1,"$startX = "],[0,"\n        \n      "]],"start1":7146,"start2":7146,"length1":32,"length2":42}]],"length":12707,"saved":false}
{"ts":1356602235112,"patch":[[{"diffs":[[0,"tartX = "],[1,"-"],[0,"\n       "]],"start1":7164,"start2":7164,"length1":16,"length2":17}]],"length":12708,"saved":false}
{"ts":1356602236732,"patch":[[{"diffs":[[0,"artX = -"],[1,"$width"],[0,"\n       "]],"start1":7165,"start2":7165,"length1":16,"length2":22}]],"length":12714,"saved":false}
{"ts":1356602238218,"patch":[[{"diffs":[[0,"tX = -$width"],[1," + ()"],[0,"\n        \n  "]],"start1":7167,"start2":7167,"length1":24,"length2":29}]],"length":12719,"saved":false}
{"ts":1356602239499,"patch":[[{"diffs":[[0,"idth + ("],[1,"$x"],[0,")\n      "]],"start1":7175,"start2":7175,"length1":16,"length2":18}]],"length":12721,"saved":false}
{"ts":1356602242759,"patch":[[{"diffs":[[0,"th + ($x"],[-1,")"],[1,"Slice/2);"],[0,"\n       "]],"start1":7177,"start2":7177,"length1":17,"length2":25}]],"length":12729,"saved":false}
{"ts":1356602243818,"patch":[[{"diffs":[[0,"$xSlice/2);\n"],[1,"        $\n"],[0,"        \n   "]],"start1":7183,"start2":7183,"length1":24,"length2":34}]],"length":12739,"saved":false}
{"ts":1356602246884,"patch":[[{"diffs":[[0,"       $"],[1,"startY = "],[0,"\n       "]],"start1":7196,"start2":7196,"length1":16,"length2":25}]],"length":12748,"saved":false}
{"ts":1356602249056,"patch":[[{"diffs":[[0,"tartY = "],[1,"-$"],[0,"\n       "]],"start1":7205,"start2":7205,"length1":16,"length2":18}]],"length":12750,"saved":false}
{"ts":1356602250296,"patch":[[{"diffs":[[0,"rtY = -$"],[1,"height + "],[0,"\n       "]],"start1":7207,"start2":7207,"length1":16,"length2":25}]],"length":12759,"saved":false}
{"ts":1356602256624,"patch":[[{"diffs":[[0,"eight + "],[1,"($)"],[0,"\n       "]],"start1":7216,"start2":7216,"length1":16,"length2":19}]],"length":12762,"saved":false}
{"ts":1356602258510,"patch":[[{"diffs":[[0,"ght + ($"],[1,"ySlice/2"],[0,")\n      "]],"start1":7218,"start2":7218,"length1":16,"length2":24}]],"length":12770,"saved":false}
{"ts":1356602259518,"patch":[[{"diffs":[[0,"Slice/2)"],[1,";"],[0,"\n       "]],"start1":7227,"start2":7227,"length1":16,"length2":17}]],"length":12771,"saved":false}
{"ts":1356602367583,"patch":[[{"diffs":[[0,"x = "],[-1,"(-$xSlice/2)"],[1,"$startX"],[0,"; $x"]],"start1":7259,"start2":7259,"length1":20,"length2":15}]],"length":12766,"saved":false}
{"ts":1356602383329,"patch":[[{"diffs":[[0,"rtX = -$"],[-1,"width"],[0," + ($xSl"]],"start1":7166,"start2":7166,"length1":21,"length2":16}]],"length":12761,"saved":false}
{"ts":1356602388913,"patch":[[{"diffs":[[0,"rtX = -$"],[1,"bounds['w']"],[0," + ($xSl"]],"start1":7166,"start2":7166,"length1":16,"length2":27}]],"length":12772,"saved":false}
{"ts":1356602396764,"patch":[[{"diffs":[[0," + ($xSlice/2);\n"],[1,"        $end\n"],[0,"        $startY "]],"start1":7185,"start2":7185,"length1":32,"length2":45}]],"length":12785,"saved":false}
{"ts":1356602397785,"patch":[[{"diffs":[[0,"    $end"],[1,"X "],[0,"\n       "]],"start1":7205,"start2":7205,"length1":16,"length2":18}]],"length":12787,"saved":false}
{"ts":1356602402318,"patch":[[{"diffs":[[0,"  $endX "],[1,"= "],[0,"\n       "]],"start1":7207,"start2":7207,"length1":16,"length2":18}]],"length":12789,"saved":false}
{"ts":1356602405573,"patch":[[{"diffs":[[0,"tartX = "],[-1,"-"],[0,"$bounds["]],"start1":7164,"start2":7164,"length1":17,"length2":16},{"diffs":[[0,"$endX = "],[1,"$"],[0,"\n       "]],"start1":7208,"start2":7208,"length1":16,"length2":17}]],"length":12789,"saved":false}
{"ts":1356602408816,"patch":[[{"diffs":[[0,"endX = $"],[1,"bounds['e']"],[0,"\n       "]],"start1":7209,"start2":7209,"length1":16,"length2":27}]],"length":12800,"saved":false}
{"ts":1356602413753,"patch":[[{"diffs":[[0,"nds['e']"],[1," - ($xSlice/2)"],[0,"\n       "]],"start1":7220,"start2":7220,"length1":16,"length2":30}]],"length":12814,"saved":false}
{"ts":1356602479696,"patch":[[{"diffs":[[0,"Slice/2)"],[1,";"],[0,"\n       "]],"start1":7234,"start2":7234,"length1":16,"length2":17},{"diffs":[[0,"Y = "],[-1,"-$height"],[1,"$bounds['s']"],[0," + ("]],"start1":7258,"start2":7258,"length1":16,"length2":20},{"diffs":[[0," + ($ySlice/2);\n"],[1,"        $endY = $bounds['n'] - ($ySlice/2);\n        \n"],[0,"        \n       "]],"start1":7274,"start2":7274,"length1":32,"length2":85},{"diffs":[[0," $startX"],[1,", $a = 0"],[0,"; $x < ("]],"start1":7368,"start2":7368,"length1":16,"length2":24}]],"length":12880,"saved":false}
{"ts":1356602483638,"patch":[[{"diffs":[[0,"e/2); $x"],[-1,"+"],[1," = $x "],[0,"+){\n    "]],"start1":7398,"start2":7398,"length1":17,"length2":22}]],"length":12885,"saved":false}
{"ts":1356602485188,"patch":[[{"diffs":[[0,"x = $x +"],[1," "],[0,"){\n     "]],"start1":7405,"start2":7405,"length1":16,"length2":17}]],"length":12886,"saved":false}
{"ts":1356602487166,"patch":[[{"diffs":[[0," = $x + "],[1,"$xSlice"],[0,"){\n     "]],"start1":7406,"start2":7406,"length1":16,"length2":23}]],"length":12893,"saved":false}
{"ts":1356602498625,"patch":[[{"diffs":[[0,"artX"],[-1,", $a = 0"],[0,"; $x"]],"start1":7372,"start2":7372,"length1":16,"length2":8}]],"length":12885,"saved":false}
{"ts":1356602508095,"patch":[[{"diffs":[[0,"X; $x < "],[-1,"($xSlice/2)"],[1,"$end"],[0,"; $x = $"]],"start1":7375,"start2":7375,"length1":27,"length2":20}]],"length":12878,"saved":false}
{"ts":1356602509691,"patch":[[{"diffs":[[0,"x < $end"],[1,"X"],[0,"; $x = $"]],"start1":7379,"start2":7379,"length1":16,"length2":17}]],"length":12879,"saved":false}
{"ts":1356602517423,"patch":[[{"diffs":[[0,"tX; $x <"],[1,"="],[0," $endX; "]],"start1":7374,"start2":7374,"length1":16,"length2":17}]],"length":12880,"saved":false}
{"ts":1356602524151,"patch":[[{"diffs":[[0,"or($"],[-1,"y = 0; $y"],[1,"x = $startX; $x"],[0," <"],[1,"="],[0," $"],[-1,"yDiv; $y++"],[1,"endX; $x = $x + $xSlice"],[0,"){\n "]],"start1":7437,"start2":7437,"length1":31,"length2":51}]],"length":12900,"saved":false}
{"ts":1356602526684,"patch":[[{"diffs":[[0,"           for($"],[-1,"x"],[1,"y"],[0," = $startX; $x <"]],"start1":7425,"start2":7425,"length1":33,"length2":33},{"diffs":[[0," for($y = $start"],[-1,"X"],[1,"Y"],[0,"; $x <= $endX; $"]],"start1":7435,"start2":7435,"length1":33,"length2":33}]],"length":12900,"saved":false}
{"ts":1356602528064,"patch":[[{"diffs":[[0,"tartY; $"],[-1,"x"],[1,"y"],[0," <= $end"]],"start1":7447,"start2":7447,"length1":17,"length2":17}]],"length":12900,"saved":false}
{"ts":1356602532932,"patch":[[{"diffs":[[0,"artY; $y <= $end"],[-1,"X"],[1,"Y"],[0,"; $x = $x + $xSl"]],"start1":7448,"start2":7448,"length1":33,"length2":33}]],"length":12900,"saved":false}
{"ts":1356602534813,"patch":[[{"diffs":[[0,"$endY; $"],[-1,"x"],[1,"y"],[0," = $"],[-1,"x"],[1,"y"],[0," + $xSli"]],"start1":7460,"start2":7460,"length1":22,"length2":22}]],"length":12900,"saved":false}
{"ts":1356602535783,"patch":[[{"diffs":[[0," $y = $y + $"],[-1,"x"],[1,"y"],[0,"Slice){\n    "]],"start1":7466,"start2":7466,"length1":25,"length2":25}]],"length":12900,"saved":false}
{"ts":1356602540903,"patch":[[{"diffs":[[0,"               \n"],[1,"                \n"],[0,"            }\n  "]],"start1":7522,"start2":7522,"length1":32,"length2":49}]],"length":12917,"saved":false}
{"ts":1356602542987,"patch":[[{"diffs":[[0,"       \n"],[-1,"                \n"],[0,"        "]],"start1":7530,"start2":7530,"length1":33,"length2":16}]],"length":12900,"saved":false}
{"ts":1356602546534,"patch":[[{"diffs":[[0,"                "],[1,"if($)"],[0,"\n               "]],"start1":7504,"start2":7504,"length1":32,"length2":37}]],"length":12905,"saved":false}
{"ts":1356602614164,"patch":[[{"diffs":[[0,"ion "],[-1,"getIxx"],[1,"calcStuff"],[0,"() {"]],"start1":6707,"start2":6707,"length1":14,"length2":17},{"diffs":[[0,"    \n        /*\n"],[-1,""],[0,"         * Ixx ="]],"start1":6796,"start2":6796,"length1":32,"length2":32},{"diffs":[[0,"   */\n         \n"],[1,"        /*\n         * Yx = integral \n         *\n         * Need to find the size of the cross section\n         */\n         \n"],[0,"        $bounds "]],"start1":6923,"start2":6923,"length1":32,"length2":156},{"diffs":[[0,"    if($"],[-1,")"],[1,"this->materialAtPoint()){\n                    //There is material at this point, add it to calcs\n                    \n                    \n                }"],[0,"\n       "]],"start1":7643,"start2":7643,"length1":17,"length2":172}]],"length":13187,"saved":false}
{"ts":1356602615579,"patch":[[{"diffs":[[0,"integral"],[-1," "],[1,"()"],[0,"\n       "]],"start1":6966,"start2":6966,"length1":17,"length2":18}]],"length":13188,"saved":false}
{"ts":1356602616821,"patch":[[{"diffs":[[0,"ntegral("],[1,"A"],[0,")\n      "]],"start1":6967,"start2":6967,"length1":16,"length2":17}]],"length":13189,"saved":false}
{"ts":1356602623055,"patch":[[{"diffs":[[0," y^2 ).d"],[-1,"x"],[1,"y"],[0,"\n       "]],"start1":6842,"start2":6842,"length1":17,"length2":17}]],"length":13189,"saved":false}
{"ts":1356602626632,"patch":[[{"diffs":[[0,"tegral(A"],[1," * y"],[0,")\n      "]],"start1":6968,"start2":6968,"length1":16,"length2":20}]],"length":13193,"saved":false}
{"ts":1356602693051,"patch":[[{"diffs":[[0,"l(A * y)"],[1,".dy / A"],[0,"\n       "]],"start1":6973,"start2":6973,"length1":16,"length2":23},{"diffs":[[0,"   */\n         \n"],[1,"        //The following values used to loop accurately\n"],[0,"        $bounds "]],"start1":7060,"start2":7060,"length1":32,"length2":87},{"diffs":[[0,"ce/2);\n        \n"],[1,"        //The following values used in calculation\n        $A = 0;\n        $Ay = 0;\n"],[0,"        \n       "]],"start1":7522,"start2":7522,"length1":32,"length2":116}]],"length":13339,"saved":false}
{"ts":1356602699198,"patch":[[{"diffs":[[0,"     * Y"],[-1,"x"],[1,"c"],[0," = integ"]],"start1":6954,"start2":6954,"length1":17,"length2":17}]],"length":13339,"saved":false}
{"ts":1356602716201,"patch":[[{"diffs":[[0,"               \n"],[1,"                    //First, add \n"],[0,"                "]],"start1":7905,"start2":7905,"length1":32,"length2":66}]],"length":13373,"saved":false}
{"ts":1356602718887,"patch":[[{"diffs":[[0,"st, add "],[1,"to area"],[0,"\n       "]],"start1":7946,"start2":7946,"length1":16,"length2":23}]],"length":13380,"saved":false}
{"ts":1356602721746,"patch":[[{"diffs":[[0,"   $Ay = 0;\n"],[1,"        $\n"],[0,"        \n   "]],"start1":7610,"start2":7610,"length1":24,"length2":34}]],"length":13390,"saved":false}
{"ts":1356602725939,"patch":[[{"diffs":[[0,"       $"],[1,"dA = "],[0,"\n       "]],"start1":7623,"start2":7623,"length1":16,"length2":21}]],"length":13395,"saved":false}
{"ts":1356602728069,"patch":[[{"diffs":[[0,"  $dA = "],[1,"$xSlice"],[0,"\n       "]],"start1":7628,"start2":7628,"length1":16,"length2":23}]],"length":13402,"saved":false}
{"ts":1356602730299,"patch":[[{"diffs":[[0," $xSlice"],[1," * $yS"],[0,"\n       "]],"start1":7635,"start2":7635,"length1":16,"length2":22}]],"length":13408,"saved":false}
{"ts":1356602731274,"patch":[[{"diffs":[[0,"ce * $yS"],[1,"lice;"],[0,"\n       "]],"start1":7641,"start2":7641,"length1":16,"length2":21}]],"length":13413,"saved":false}
{"ts":1356602740653,"patch":[[{"diffs":[[0,"                "],[1,"$A = $A "],[0,"\n               "]],"start1":7999,"start2":7999,"length1":32,"length2":40}]],"length":13421,"saved":false}
{"ts":1356602742983,"patch":[[{"diffs":[[0,"$A = $A "],[1,"+ $dA"],[0,"\n       "]],"start1":8015,"start2":8015,"length1":16,"length2":21}]],"length":13426,"saved":false}
{"ts":1356602744903,"patch":[[{"diffs":[[0,"$A + $dA"],[1,";\n                    \n                    "],[0,"\n       "]],"start1":8020,"start2":8020,"length1":16,"length2":59}]],"length":13469,"saved":false}
{"ts":1356602747575,"patch":[[{"diffs":[[0,"                "],[1,"//Then add to "],[0,"\n               "]],"start1":8055,"start2":8055,"length1":32,"length2":46}]],"length":13483,"saved":false}
{"ts":1356602815614,"patch":[[{"diffs":[[0,"ySlice;\n"],[1,"        $Ayy = 0;\n"],[0,"        "]],"start1":7647,"start2":7647,"length1":16,"length2":34},{"diffs":[[0," add to "],[1,"A*y\n                    $Ay = $Ay + ($dA * $y);\n                    \n                    //Then add to A*y^2\n                    $Ayy = $Ayy + ()"],[0,"\n       "]],"start1":8095,"start2":8095,"length1":16,"length2":161}]],"length":13646,"saved":false}
{"ts":1356602829178,"patch":[[{"diffs":[[0,"$Ayy + ("],[1,"$"],[0,")\n      "]],"start1":8239,"start2":8239,"length1":16,"length2":17}]],"length":13647,"saved":false}
{"ts":1356602830155,"patch":[[{"diffs":[[0,"Ayy + ($"],[1,"dA"],[0,")\n      "]],"start1":8240,"start2":8240,"length1":16,"length2":18}]],"length":13649,"saved":false}
{"ts":1356602831219,"patch":[[{"diffs":[[0,"y + ($dA"],[1," "],[0,")\n      "]],"start1":8242,"start2":8242,"length1":16,"length2":17}]],"length":13650,"saved":false}
{"ts":1356602832243,"patch":[[{"diffs":[[0,"y + ($dA"],[1," *"],[0," )\n     "]],"start1":8242,"start2":8242,"length1":16,"length2":18}]],"length":13652,"saved":false}
{"ts":1356602834341,"patch":[[{"diffs":[[0," ($dA * "],[1,"$y * $"],[0,")\n      "]],"start1":8245,"start2":8245,"length1":16,"length2":22}]],"length":13658,"saved":false}
{"ts":1356602835347,"patch":[[{"diffs":[[0,"* $y * $"],[1,"h"],[0,")\n      "]],"start1":8251,"start2":8251,"length1":16,"length2":17}]],"length":13659,"saved":false}
{"ts":1356602836570,"patch":[[{"diffs":[[0,"* $y * $"],[-1,"h"],[1,"y"],[0,")\n      "]],"start1":8251,"start2":8251,"length1":17,"length2":17}]],"length":13659,"saved":false}
{"ts":1356602840502,"patch":[[{"diffs":[[0,"$y * $y)"],[1,";"],[0,"\n       "]],"start1":8253,"start2":8253,"length1":16,"length2":17}]],"length":13660,"saved":false}
{"ts":1356602853553,"patch":[[{"diffs":[[0,"               \n"],[1,"                    $Ay = $Ay + ($dA * $y);\n                    \n"],[0,"                "]],"start1":8156,"start2":8156,"length1":32,"length2":97}]],"length":13725,"saved":false}
{"ts":1356602854631,"patch":[[{"diffs":[[0," * $y);\n"],[-1,"                    \n"],[0,"        "]],"start1":8143,"start2":8143,"length1":37,"length2":16}]],"length":13704,"saved":false}
{"ts":1356602855596,"patch":[[{"diffs":[[0,"d to A*y"],[1," a"],[0,"\n       "]],"start1":8098,"start2":8098,"length1":16,"length2":18}]],"length":13706,"saved":false}
{"ts":1356602857662,"patch":[[{"diffs":[[0,"to A*y a"],[1,"nd A*x"],[0,"\n       "]],"start1":8100,"start2":8100,"length1":16,"length2":22}]],"length":13712,"saved":false}
{"ts":1356602859824,"patch":[[{"diffs":[[0,"= $Ay + ($dA * $"],[-1,"y"],[1,"x"],[0,");\n             "]],"start1":8183,"start2":8183,"length1":33,"length2":33}]],"length":13712,"saved":false}
{"ts":1356602864162,"patch":[[{"diffs":[[0,"        $Ay = $A"],[-1,"y"],[1,"x"],[0," + ($dA * $x);\n "]],"start1":8171,"start2":8171,"length1":33,"length2":33}]],"length":13712,"saved":false}
{"ts":1356602866787,"patch":[[{"diffs":[[0,"          $A"],[-1,"y"],[1,"x"],[0," = $Ax + ($d"]],"start1":8169,"start2":8169,"length1":25,"length2":25}]],"length":13712,"saved":false}
{"ts":1356602869430,"patch":[[{"diffs":[[0,"$dA * $y * $y);\n"],[1,"                    $Ayy = $Ayy + ($dA * $y * $y);\n"],[0,"                "]],"start1":8299,"start2":8299,"length1":32,"length2":83}]],"length":13763,"saved":false}
{"ts":1356602872082,"patch":[[{"diffs":[[0," + ($dA * $y * $"],[-1,"y"],[1,"x"],[0,");\n             "]],"start1":8346,"start2":8346,"length1":33,"length2":33}]],"length":13763,"saved":false}
{"ts":1356602876067,"patch":[[{"diffs":[[0,"y + ($dA * $"],[-1,"y"],[1,"x"],[0," * $x);\n    "]],"start1":8345,"start2":8345,"length1":25,"length2":25}]],"length":13763,"saved":false}
{"ts":1356602879136,"patch":[[{"diffs":[[0,"       $Ayy = $A"],[-1,"yy"],[1,"xx"],[0," + ($dA * $x * $"]],"start1":8328,"start2":8328,"length1":34,"length2":34}]],"length":13763,"saved":false}
{"ts":1356602881039,"patch":[[{"diffs":[[0,"          $A"],[-1,"yy"],[1,"xx"],[0," = $Axx + ($"]],"start1":8325,"start2":8325,"length1":26,"length2":26}]],"length":13763,"saved":false}
{"ts":1356602884836,"patch":[[{"diffs":[[0,"   $Ay = 0;\n"],[1,"        $Ax = 0\n"],[0,"        $dA "]],"start1":7610,"start2":7610,"length1":24,"length2":40}]],"length":13779,"saved":false}
{"ts":1356602885911,"patch":[[{"diffs":[[0," $Ax = 0"],[1,";"],[0,"\n       "]],"start1":7629,"start2":7629,"length1":16,"length2":17}]],"length":13780,"saved":false}
{"ts":1356602887036,"patch":[[{"diffs":[[0,"y = 0;\n        \n"],[1,"        \n"],[0,"        for($x ="]],"start1":7683,"start2":7683,"length1":32,"length2":41}]],"length":13789,"saved":false}
{"ts":1356602892215,"patch":[[{"diffs":[[0,"yy = 0;\n        "],[1,"$Axx = "],[0,"\n        \n      "]],"start1":7682,"start2":7682,"length1":32,"length2":39}]],"length":13796,"saved":false}
{"ts":1356602893164,"patch":[[{"diffs":[[0," $Axx = "],[1,"0;"],[0,"\n       "]],"start1":7697,"start2":7697,"length1":16,"length2":18}]],"length":13798,"saved":false}
{"ts":1356603832605,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        if()\n        \n"],[0,"    }\n    \n    \n"]],"start1":8466,"start2":8466,"length1":32,"length2":54}]],"length":13820,"saved":false}
{"ts":1356603833517,"patch":[[{"diffs":[[0,"     if("],[1,"$"],[0,")\n      "]],"start1":8485,"start2":8485,"length1":16,"length2":17}]],"length":13821,"saved":false}
{"ts":1356603834851,"patch":[[{"diffs":[[0,"    if($"],[1,"A"],[0,")\n      "]],"start1":8486,"start2":8486,"length1":16,"length2":17}]],"length":13822,"saved":false}
{"ts":1356603837603,"patch":[[{"diffs":[[0,"   if($A"],[1,">0"],[0,")\n      "]],"start1":8487,"start2":8487,"length1":16,"length2":18}]],"length":13824,"saved":false}
{"ts":1356603839037,"patch":[[{"diffs":[[0," if($A>0"],[1," && $"],[0,")\n      "]],"start1":8489,"start2":8489,"length1":16,"length2":21}]],"length":13829,"saved":false}
{"ts":1356603842273,"patch":[[{"diffs":[[0,"A>0 && $"],[1,"Ay>"],[0,")\n      "]],"start1":8494,"start2":8494,"length1":16,"length2":19}]],"length":13832,"saved":false}
{"ts":1356603843274,"patch":[[{"diffs":[[0," && $Ay>"],[1,"0"],[0,")\n      "]],"start1":8497,"start2":8497,"length1":16,"length2":17}]],"length":13833,"saved":false}
{"ts":1356603844511,"patch":[[{"diffs":[[0,"&& $Ay>0"],[1," "],[0,")\n      "]],"start1":8498,"start2":8498,"length1":16,"length2":17}]],"length":13834,"saved":false}
{"ts":1356603845481,"patch":[[{"diffs":[[0,"&& $Ay>0"],[1," &&"],[0," )\n     "]],"start1":8498,"start2":8498,"length1":16,"length2":19}]],"length":13837,"saved":false}
{"ts":1356603849737,"patch":[[{"diffs":[[0,"Ay>0 && "],[1,"$Ax>"],[0,")\n      "]],"start1":8502,"start2":8502,"length1":16,"length2":20}]],"length":13841,"saved":false}
{"ts":1356603851755,"patch":[[{"diffs":[[0," && $Ax>"],[1,"0"],[0,")\n      "]],"start1":8506,"start2":8506,"length1":16,"length2":17}]],"length":13842,"saved":false}
{"ts":1356603858805,"patch":[[{"diffs":[[0,"   if($A"],[-1,">"],[1,"!=="],[0,"0 && $Ay"]],"start1":8487,"start2":8487,"length1":17,"length2":19}]],"length":13844,"saved":false}
{"ts":1356603861553,"patch":[[{"diffs":[[0,"0 && $Ay"],[-1,">"],[1,"!=="],[0,"0 && $Ax"]],"start1":8498,"start2":8498,"length1":17,"length2":19}]],"length":13846,"saved":false}
{"ts":1356603867798,"patch":[[{"diffs":[[0,"!==0"],[-1," && $Ay!==0 && $Ax>0"],[0,")\n  "]],"start1":8495,"start2":8495,"length1":28,"length2":8}]],"length":13826,"saved":false}
{"ts":1356603869623,"patch":[[{"diffs":[[0,"($A!==0)"],[1,"{\n            \n        }"],[0,"\n       "]],"start1":8492,"start2":8492,"length1":16,"length2":40}]],"length":13850,"saved":false}
{"ts":1356603874083,"patch":[[{"diffs":[[0,"   if($A"],[-1,"!"],[0,"==0){\n  "]],"start1":8487,"start2":8487,"length1":17,"length2":16}]],"length":13849,"saved":false}
{"ts":1356603883715,"patch":[[{"diffs":[[0,"0){\n            "],[1,"$this->"],[0,"\n        }\n     "]],"start1":8497,"start2":8497,"length1":32,"length2":39}]],"length":13856,"saved":false}
{"ts":1356603887071,"patch":[[{"diffs":[[0," $this->"],[1,"invalidate();\n        }\n        "],[0,"\n       "]],"start1":8512,"start2":8512,"length1":16,"length2":48},{"diffs":[[0,"       \n        "],[-1,"}"],[0,"\n        \n    }\n"]],"start1":8545,"start2":8545,"length1":33,"length2":32}]],"length":13887,"saved":false}
{"ts":1356603892624,"patch":[[{"diffs":[[0,"date();\n        "],[-1,"}"],[1,"    return false;\n        }\n        "],[0,"\n        \n      "]],"start1":8526,"start2":8526,"length1":33,"length2":68}]],"length":13922,"saved":false}
{"ts":1356603897976,"patch":[[{"diffs":[[0,"       \n        "],[1,"$this->"],[0,"\n        \n      "]],"start1":8571,"start2":8571,"length1":32,"length2":39}]],"length":13929,"saved":false}
{"ts":1356603918962,"patch":[[{"diffs":[[0," \n      */\n    p"],[-1,"ublic"],[1,"rivate"],[0," function calcSt"]],"start1":6680,"start2":6680,"length1":37,"length2":38}]],"length":13930,"saved":false}
{"ts":1356603923466,"patch":[[{"diffs":[[0,"        "],[-1,"$this->"],[1,"private $Ixx = 0;\n    private $ixxValid = false;\n    //Iyy\n    private $Iyy = 0;\n    private $iyyValid = false;\n    //A\n    private $A = 0;\n    private $aValid = false;\n    //Centroid y coord\n    private $Yc = 0;\n    private $ycValid = false;\n    //Centroid x coord\n    private $Xc = 0;\n    private $xcValid = false;"],[0,"\n       "]],"start1":8580,"start2":8580,"length1":23,"length2":332}]],"length":14239,"saved":false}
{"ts":1356603925647,"patch":[[{"diffs":[[0,"cValid = false;\n"],[1,"    \n        \n"],[0,"        \n       "]],"start1":8889,"start2":8889,"length1":32,"length2":46}]],"length":14253,"saved":false}
{"ts":1356603927108,"patch":[[{"diffs":[[0,"e;\n    \n        "],[1,"private"],[0,"\n        \n      "]],"start1":8902,"start2":8902,"length1":32,"length2":39}]],"length":14260,"saved":false}
{"ts":1356603931779,"patch":[[{"diffs":[[0,"        "],[-1,"private"],[1,"$this->Ixx = "],[0,"\n       "]],"start1":8910,"start2":8910,"length1":23,"length2":29}]],"length":14266,"saved":false}
{"ts":1356604689881,"patch":[[{"diffs":[[0,"->Ixx = "],[1,"$"],[0,"\n       "]],"start1":8923,"start2":8923,"length1":16,"length2":17}]],"length":14267,"saved":false}
{"ts":1356604692091,"patch":[[{"diffs":[[0,">Ixx = $"],[1,"A"],[0,"\n       "]],"start1":8924,"start2":8924,"length1":16,"length2":17}]],"length":14268,"saved":false}
{"ts":1356604694234,"patch":[[{"diffs":[[0,"Ixx = $A"],[1,"yy"],[0,"\n       "]],"start1":8925,"start2":8925,"length1":16,"length2":18}]],"length":14270,"saved":false}
{"ts":1356604760301,"patch":[[{"diffs":[[0,"x = $Ayy"],[1,";\n        $this->Iyy = $Axx;\n        $this->A = $A;\n        $this->Yc = $Ay/$A;\n        $this->Xc = $Ax/$A;\n        \n        $\n        "],[0,"\n       "]],"start1":8927,"start2":8927,"length1":16,"length2":151}]],"length":14405,"saved":false}
{"ts":1356604766719,"patch":[[{"diffs":[[0,"       $"],[1,"this->ixxValid = true;"],[0,"\n       "]],"start1":9053,"start2":9053,"length1":16,"length2":38}]],"length":14427,"saved":false}
{"ts":1356604767813,"patch":[[{"diffs":[[0,"xxValid = true;\n"],[1,"        $this-\n"],[0,"        \n       "]],"start1":9068,"start2":9068,"length1":32,"length2":47}]],"length":14442,"saved":false}
{"ts":1356604769463,"patch":[[{"diffs":[[0,"  $this-"],[1,">iyY"],[0,"\n       "]],"start1":9090,"start2":9090,"length1":16,"length2":20}]],"length":14446,"saved":false}
{"ts":1356604770904,"patch":[[{"diffs":[[0,"this->iy"],[-1,"Y"],[1,"yVali"],[0,"\n       "]],"start1":9093,"start2":9093,"length1":17,"length2":21}]],"length":14450,"saved":false}
{"ts":1356604774930,"patch":[[{"diffs":[[0,">iyyVali"],[1,"d = true;\n        $this->aVlid ="],[0,"\n       "]],"start1":9098,"start2":9098,"length1":16,"length2":48}]],"length":14482,"saved":false}
{"ts":1356604776391,"patch":[[{"diffs":[[0,">aVlid ="],[1," t"],[0,"\n       "]],"start1":9130,"start2":9130,"length1":16,"length2":18}]],"length":14484,"saved":false}
{"ts":1356604777298,"patch":[[{"diffs":[[0,"Vlid = t"],[1,"rue;\n        "],[0,"\n       "]],"start1":9132,"start2":9132,"length1":16,"length2":29}]],"length":14497,"saved":false}
{"ts":1356604778580,"patch":[[{"diffs":[[0,"= true;\n        "],[1,"$this-"],[0,"\n        \n      "]],"start1":9137,"start2":9137,"length1":32,"length2":38}]],"length":14503,"saved":false}
{"ts":1356604780016,"patch":[[{"diffs":[[0,"  $this-"],[1,">tyc"],[0,"\n       "]],"start1":9151,"start2":9151,"length1":16,"length2":20}]],"length":14507,"saved":false}
{"ts":1356604785678,"patch":[[{"diffs":[[0,"is->"],[-1,"t"],[0,"yc"],[1,"Valid = true;"],[0,"\n   "]],"start1":9156,"start2":9156,"length1":11,"length2":23}]],"length":14519,"saved":false}
{"ts":1356604789910,"patch":[[{"diffs":[[0,"this->aV"],[1,"a"],[0,"lid = tr"]],"start1":9125,"start2":9125,"length1":16,"length2":17},{"diffs":[[0,"      \n        \n"],[1,"        \n"],[0,"    }\n    \n    \n"]],"start1":9188,"start2":9188,"length1":32,"length2":41}]],"length":14529,"saved":false}
{"ts":1356604791948,"patch":[[{"diffs":[[0,"= true;\n        "],[1,"$this->x"],[0,"\n        \n      "]],"start1":9169,"start2":9169,"length1":32,"length2":40}]],"length":14537,"saved":false}
{"ts":1356604793051,"patch":[[{"diffs":[[0,"$this->x"],[1,"cVal;i"],[0,"\n       "]],"start1":9185,"start2":9185,"length1":16,"length2":22}]],"length":14543,"saved":false}
{"ts":1356604794131,"patch":[[{"diffs":[[0,"cVal"],[-1,";"],[0,"i"],[1,"d = "],[0,"\n   "]],"start1":9193,"start2":9193,"length1":10,"length2":13}]],"length":14546,"saved":false}
{"ts":1356604796464,"patch":[[{"diffs":[[0,"Valid = "],[1,"true;"],[0,"\n       "]],"start1":9194,"start2":9194,"length1":16,"length2":21}]],"length":14551,"saved":false}
{"ts":1356604802460,"patch":[[{"diffs":[[0,"    "],[-1,"\n        private $Ixx = 0;\n    private $ixxValid = false;\n    //Iyy\n    private $Iyy = 0;\n    private $iyyValid = false;\n    //A\n    private $A = 0;\n    private $aValid = false;\n    //Centroid y coord\n    private $Yc = 0;\n    private $ycValid = false;\n    //Centroid x coord\n    private $Xc = 0;\n    private $xcValid = false;\n"],[0,"    "]],"start1":8575,"start2":8575,"length1":334,"length2":8}]],"length":14225,"saved":false}
{"ts":1356604806268,"patch":[[{"diffs":[[0,"       \n        "],[1,"return "],[0,"\n        \n    }\n"]],"start1":8883,"start2":8883,"length1":32,"length2":39}]],"length":14232,"saved":false}
{"ts":1356604808725,"patch":[[{"diffs":[[0," return "],[1,"true;"],[0,"\n       "]],"start1":8898,"start2":8898,"length1":16,"length2":21}]],"length":14237,"saved":false}
{"ts":1356604826544,"patch":[[{"diffs":[[0,"  * "],[-1,"Get second moment of area about the X-X axis"],[1,"Calculate section properties.\n      * This is all done in "],[0,"\n   "]],"start1":6548,"start2":6548,"length1":52,"length2":66}]],"length":14251,"saved":false}
{"ts":1356604829096,"patch":[[{"diffs":[[0,"ll done "],[-1,"in "],[1,"at"],[0,"\n      *"]],"start1":6599,"start2":6599,"length1":19,"length2":18}]],"length":14250,"saved":false}
{"ts":1356604829999,"patch":[[{"diffs":[[0," done at"],[1," once "],[0,"\n      *"]],"start1":6601,"start2":6601,"length1":16,"length2":22}]],"length":14256,"saved":false}
{"ts":1356604834183,"patch":[[{"diffs":[[0,"at once "],[1,"because it takes"],[0,"\n      *"]],"start1":6607,"start2":6607,"length1":16,"length2":32}]],"length":14272,"saved":false}
{"ts":1356604837295,"patch":[[{"diffs":[[0," it "],[-1,"take"],[1,"i"],[0,"s\n  "]],"start1":6622,"start2":6622,"length1":12,"length2":9}]],"length":14269,"saved":false}
{"ts":1356604839881,"patch":[[{"diffs":[[0,"se it is"],[1," mroe e"],[0,"\n      *"]],"start1":6620,"start2":6620,"length1":16,"length2":23}]],"length":14276,"saved":false}
{"ts":1356604842339,"patch":[[{"diffs":[[0,"s mroe e"],[1,"fficient"],[0,"\n      *"]],"start1":6627,"start2":6627,"length1":16,"length2":24}]],"length":14284,"saved":false}
{"ts":1356604850278,"patch":[[{"diffs":[[0,"  \n    \n    /**\n"],[1,"      * Get second moment of area about the X-X axis\n      * \n      * @return float The second moment of area about the X-X axis\n      * \n      */\n    \n    /**\n"],[0,"      * Get seco"]],"start1":8976,"start2":8976,"length1":32,"length2":192}]],"length":14444,"saved":false}
{"ts":1356604851313,"patch":[[{"diffs":[[0,"* \n      */\n"],[1,"     \n"],[0,"    \n    /**"]],"start1":9127,"start2":9127,"length1":24,"length2":30}]],"length":14450,"saved":false}
{"ts":1356604852901,"patch":[[{"diffs":[[0,"     */\n    "],[-1," "],[1,"publ"],[0,"\n    \n    /*"]],"start1":9131,"start2":9131,"length1":25,"length2":28}]],"length":14453,"saved":false}
{"ts":1356604857325,"patch":[[{"diffs":[[0,"    publ"],[1,"ic function getIxx"],[0,"\n    \n  "]],"start1":9139,"start2":9139,"length1":16,"length2":34}]],"length":14471,"saved":false}
{"ts":1356604860785,"patch":[[{"diffs":[[0,"n getIxx"],[1,"() {\n        \n        \n        \n    }"],[0,"\n    \n  "]],"start1":9157,"start2":9157,"length1":16,"length2":53}]],"length":14508,"saved":false}
{"ts":1356604869134,"patch":[[{"diffs":[[0,"       \n        "],[1,"if($this->ixx)"],[0,"\n        \n    }\n"]],"start1":9171,"start2":9171,"length1":32,"length2":46}]],"length":14522,"saved":false}
{"ts":1356604875250,"patch":[[{"diffs":[[0,"his->ixx"],[1,"Valid"],[0,")\n      "]],"start1":9192,"start2":9192,"length1":16,"length2":21}]],"length":14527,"saved":false}
{"ts":1356604879047,"patch":[[{"diffs":[[0,"ixxValid"],[-1,")"],[1," === true){"],[0,"\n       "]],"start1":9197,"start2":9197,"length1":17,"length2":27}]],"length":14537,"saved":false}
{"ts":1356604880211,"patch":[[{"diffs":[[0,"alid === true){\n"],[1,"            ret\n        }\n"],[0,"        \n    }\n "]],"start1":9201,"start2":9201,"length1":32,"length2":58}]],"length":14563,"saved":false}
{"ts":1356604881609,"patch":[[{"diffs":[[0,"     ret"],[1,"urn $this-"],[0,"\n       "]],"start1":9224,"start2":9224,"length1":16,"length2":26}]],"length":14573,"saved":false}
{"ts":1356604883392,"patch":[[{"diffs":[[0,"n $this-"],[1,">I"],[0,"\n       "]],"start1":9234,"start2":9234,"length1":16,"length2":18}]],"length":14575,"saved":false}
{"ts":1356604885328,"patch":[[{"diffs":[[0,"$this->I"],[1,"xx;"],[0,"\n       "]],"start1":9236,"start2":9236,"length1":16,"length2":19}]],"length":14578,"saved":false}
{"ts":1356604888713,"patch":[[{"diffs":[[0,"$this->Ixx;\n"],[1,"        }else{\n            return false;\n"],[0,"        }\n  "]],"start1":9236,"start2":9236,"length1":24,"length2":65}]],"length":14619,"saved":false}
{"ts":1356604919608,"patch":[[{"diffs":[[0,"            "],[-1,"return false;"],[1,"$this->"],[0,"\n        }\n "]],"start1":9263,"start2":9263,"length1":37,"length2":31}]],"length":14613,"saved":false}
{"ts":1356604928231,"patch":[[{"diffs":[[0," $this->"],[1,"calcStuff();"],[0,"\n       "]],"start1":9274,"start2":9274,"length1":16,"length2":28}]],"length":14625,"saved":false}
{"ts":1356604929857,"patch":[[{"diffs":[[0,"alcStuff();\n"],[1,"            if($thi)\n"],[0,"        }\n  "]],"start1":9283,"start2":9283,"length1":24,"length2":45}]],"length":14646,"saved":false}
{"ts":1356604935128,"patch":[[{"diffs":[[0," if($thi"],[-1,")"],[1,"s->ixxValid === true){\n                \n            }"],[0,"\n       "]],"start1":9306,"start2":9306,"length1":17,"length2":69}]],"length":14698,"saved":false}
{"ts":1356604936446,"patch":[[{"diffs":[[0,"                "],[1,"return $"],[0,"\n            }\n "]],"start1":9337,"start2":9337,"length1":32,"length2":40}]],"length":14706,"saved":false}
{"ts":1356604939902,"patch":[[{"diffs":[[0,"return $"],[1,"this->Ixx;"],[0,"\n       "]],"start1":9353,"start2":9353,"length1":16,"length2":26},{"diffs":[[0,";\n            }\n"],[1,"            \n"],[0,"        }\n      "]],"start1":9370,"start2":9370,"length1":32,"length2":45}]],"length":14729,"saved":false}
{"ts":1356604944525,"patch":[[{"diffs":[[0,"  }\n            "],[1,"else{\n                return false;\n            }"],[0,"\n        }\n     "]],"start1":9382,"start2":9382,"length1":32,"length2":81}]],"length":14778,"saved":false}
{"ts":1356604954405,"patch":[[{"diffs":[[0,"     \n      "],[1,"  \n    "],[0,"\n    }\n    \n"]],"start1":9667,"start2":9667,"length1":24,"length2":31}]],"length":14785,"saved":false}
{"ts":1356604955374,"patch":[[{"diffs":[[0,"   \n        "],[1,"if($this->ixxValid === true){\n            return $this->Ixx;\n        }else{\n            $this->calcStuff();\n            if($this->ixxValid === true){\n                return $this->Ixx;\n            }\n            else{\n                return false;\n            }\n        }"],[0,"\n    \n    }\n"]],"start1":9669,"start2":9669,"length1":24,"length2":294}]],"length":15055,"saved":false}
{"ts":1356604958422,"patch":[[{"diffs":[[0,"     if($this->i"],[-1,"xxV"],[1,"y"],[0,"alid === true){\n"]],"start1":9676,"start2":9676,"length1":35,"length2":33}]],"length":15053,"saved":false}
{"ts":1356604961519,"patch":[[{"diffs":[[0,"this->iy"],[1,"yV"],[0,"alid ==="]],"start1":9685,"start2":9685,"length1":16,"length2":18}]],"length":15055,"saved":false}
{"ts":1356604965983,"patch":[[{"diffs":[[0," return $this->I"],[-1,"xx"],[1,"yy"],[0,";\n        }else{"]],"start1":9722,"start2":9722,"length1":34,"length2":34}]],"length":15055,"saved":false}
{"ts":1356604968969,"patch":[[{"diffs":[[0,"     if($this->i"],[-1,"xx"],[1,"yy"],[0,"Valid === true){"]],"start1":9796,"start2":9796,"length1":34,"length2":34}]],"length":15055,"saved":false}
{"ts":1356604970585,"patch":[[{"diffs":[[0," return $this->I"],[-1,"xx"],[1,"yy"],[0,";\n            }\n"]],"start1":9846,"start2":9846,"length1":34,"length2":34}]],"length":15055,"saved":false}
{"ts":1356604985295,"patch":[[{"diffs":[[0," * \n"],[-1,"      * @return float The second moment of area about the X-X axis\n      * \n"],[0,"    "]],"start1":6649,"start2":6649,"length1":84,"length2":8}]],"length":14979,"saved":false}
{"ts":1356604993329,"patch":[[{"diffs":[[0,"fficient"],[1,"."],[0,"\n      *"]],"start1":6635,"start2":6635,"length1":16,"length2":17}]],"length":14980,"saved":false}
{"ts":1356604995316,"patch":[[{"diffs":[[0," it is m"],[-1,"r"],[0,"o"],[1,"r"],[0,"e effici"]],"start1":6622,"start2":6622,"length1":18,"length2":18}]],"length":14980,"saved":false}
{"ts":1356605033225,"patch":[[{"diffs":[[0,"      }\n        "],[-1,"    "],[0,"\n        $this->"]],"start1":8535,"start2":8535,"length1":36,"length2":32}]],"length":14976,"saved":false}
{"ts":1356605060395,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        \n        \n"],[0,"        $this->I"]],"start1":8536,"start2":8536,"length1":32,"length2":50}]],"length":14994,"saved":false}
{"ts":1356605063131,"patch":[[{"diffs":[[0,"       \n"],[-1,"        \n        \n"],[0,"        "]],"start1":8544,"start2":8544,"length1":34,"length2":16}]],"length":14976,"saved":false}
{"ts":1356605066014,"patch":[[{"diffs":[[0,"x = $Ayy"],[1," - ($A)"],[0,";\n      "]],"start1":8569,"start2":8569,"length1":16,"length2":23}]],"length":14983,"saved":false}
{"ts":1356605067399,"patch":[[{"diffs":[[0,"yy - ($A"],[1," * "],[0,");\n     "]],"start1":8575,"start2":8575,"length1":16,"length2":19}]],"length":14986,"saved":false}
{"ts":1356605068508,"patch":[[{"diffs":[[0,"- ($A * "],[1,"$"],[0,");\n     "]],"start1":8578,"start2":8578,"length1":16,"length2":17}]],"length":14987,"saved":false}
{"ts":1356605074175,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        $\n        \n"],[0,"        $this->I"]],"start1":8536,"start2":8536,"length1":32,"length2":51}]],"length":15006,"saved":false}
{"ts":1356605079104,"patch":[[{"diffs":[[0,"       $"],[1,"yc"],[0,"\n       "]],"start1":8553,"start2":8553,"length1":16,"length2":18}]],"length":15008,"saved":false}
{"ts":1356605086363,"patch":[[{"diffs":[[0,"     $yc"],[1,"$Ay/$A"],[0,"\n       "]],"start1":8555,"start2":8555,"length1":16,"length2":22},{"diffs":[[0,"s->Yc = "],[-1,"$Ay/$A"],[0,";\n      "]],"start1":8679,"start2":8679,"length1":22,"length2":16}]],"length":15008,"saved":false}
{"ts":1356605153166,"patch":[[{"diffs":[[0," $yc"],[1," = "],[0,"$Ay/$A"],[1,";\n        $xc = $Ax/$A;"],[0,"\n   "]],"start1":8559,"start2":8559,"length1":14,"length2":40},{"diffs":[[0," ($A * $"],[1,"yc * $yc"],[0,");\n     "]],"start1":8632,"start2":8632,"length1":16,"length2":24},{"diffs":[[0,"y = $Axx"],[1," - ($A * $xc * $xc)"],[0,";\n      "]],"start1":8668,"start2":8668,"length1":16,"length2":35},{"diffs":[[0,"s->Yc = "],[1,"$yc"],[0,";\n      "]],"start1":8732,"start2":8732,"length1":16,"length2":19},{"diffs":[[0,"this->Xc = $"],[-1,"Ax/$A"],[1,"xc"],[0,";\n        \n "]],"start1":8754,"start2":8754,"length1":29,"length2":26},{"diffs":[[0," getIxx("],[1,"$axis == 'NA'"],[0,") {\n    "]],"start1":9164,"start2":9164,"length1":16,"length2":29}]],"length":15074,"saved":false}
{"ts":1356605157341,"patch":[[{"diffs":[[0,"== '"],[-1,"NA"],[1,"neutral"],[0,"') {"]],"start1":9178,"start2":9178,"length1":10,"length2":15}]],"length":15079,"saved":false}
{"ts":1356608724312,"patch":[[{"diffs":[[0,"e){\n            "],[1,"if($axis === '"],[0,"return $this->Ix"]],"start1":9237,"start2":9237,"length1":32,"length2":46}]],"length":15093,"saved":false}
{"ts":1356608725720,"patch":[[{"diffs":[[0,"is === '"],[1,"neut"],[0,"return $"]],"start1":9259,"start2":9259,"length1":16,"length2":20}]],"length":15097,"saved":false}
{"ts":1356608727667,"patch":[[{"diffs":[[0,"== 'neut"],[1,"ral')"],[0,"return $"]],"start1":9263,"start2":9263,"length1":16,"length2":21}]],"length":15102,"saved":false}
{"ts":1356608729651,"patch":[[{"diffs":[[0,"eutral')"],[1,"{\n                "],[0,"return $"]],"start1":9268,"start2":9268,"length1":16,"length2":34}]],"length":15120,"saved":false}
{"ts":1356608732680,"patch":[[{"diffs":[[0,"urn $this->Ixx;\n"],[1,"            }elseif\n"],[0,"        }else{\n "]],"start1":9297,"start2":9297,"length1":32,"length2":52}]],"length":15140,"saved":false}
{"ts":1356608734565,"patch":[[{"diffs":[[0," }elseif"],[1,"($axci)"],[0,"\n       "]],"start1":9324,"start2":9324,"length1":16,"length2":23}]],"length":15147,"saved":false}
{"ts":1356608735912,"patch":[[{"diffs":[[0,"seif($ax"],[-1,"c"],[0,"i"],[1,"s"],[0,")\n      "]],"start1":9328,"start2":9328,"length1":18,"length2":18}]],"length":15147,"saved":false}
{"ts":1356608803021,"patch":[[{"diffs":[[0,"    "],[-1,"return $this->Ixx;\n            }elseif($axis)"],[1,"//Ixx is stored relative to the neutral axis\n                return $this->Ixx;\n            }elseif($axis === 'local'){\n                //Convert Ixx to be relat\n                return $this->Ixx + ($this->A * $this->Yc * $this->Yc)\n            }"],[0,"\n   "]],"start1":9290,"start2":9290,"length1":53,"length2":254}]],"length":15348,"saved":false}
{"ts":1356608804330,"patch":[[{"diffs":[[0,"be relat"],[1,"ive to the loc"],[0,"\n       "]],"start1":9447,"start2":9447,"length1":16,"length2":30}]],"length":15362,"saved":false}
{"ts":1356608806544,"patch":[[{"diffs":[[0," the loc"],[1,"a axis"],[0,"\n       "]],"start1":9461,"start2":9461,"length1":16,"length2":22}]],"length":15368,"saved":false}
{"ts":1356608820702,"patch":[[{"diffs":[[0,"    "],[-1,"if($axis === 'neutral'){\n                //Ixx is stored relative to the neutral axis\n                return $this->Ixx;\n            }elseif($axis === 'local'){\n                //Convert Ixx to be relative to the loca axis\n                return $this->Ixx + ($this->A * $this->Yc * $this->Yc)\n            }"],[0,"\n   "]],"start1":9249,"start2":9249,"length1":315,"length2":8}]],"length":15061,"saved":false}
{"ts":1356608823209,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        if($axis === 'neutral'){\n                //Ixx is stored relative to the neutral axis\n                return $this->Ixx;\n            }elseif($axis === 'local'){\n                //Convert Ixx to be relative to the loca axis\n                return $this->Ixx + ($this->A * $this->Yc * $this->Yc)\n            }\n        \n"],[0,"    }\n    \n    /"]],"start1":9457,"start2":9457,"length1":32,"length2":357}]],"length":15386,"saved":false}
{"ts":1356608828669,"patch":[[{"diffs":[[0,"$this->ixxValid "],[-1,"="],[1,"!"],[0,"== true){\n      "]],"start1":9214,"start2":9214,"length1":33,"length2":33}]],"length":15386,"saved":false}
{"ts":1356608832975,"patch":[[{"diffs":[[0,"e){\n            "],[1,"$this->calcStuff();"],[0,"\n        }else{\n"]],"start1":9237,"start2":9237,"length1":32,"length2":51},{"diffs":[[0,"        "],[-1,"$this->calcStuff();"],[0,"\n       "]],"start1":9292,"start2":9292,"length1":35,"length2":16}]],"length":15386,"saved":false}
{"ts":1356608840360,"patch":[[{"diffs":[[0,"uff();\n        }"],[1,"\n        \n        "],[0,"else{\n          "]],"start1":9266,"start2":9266,"length1":32,"length2":50}]],"length":15404,"saved":false}
{"ts":1356608847504,"patch":[[{"diffs":[[0,"   \n"],[-1,"        else{\n            \n    "],[0,"    "]],"start1":9288,"start2":9288,"length1":39,"length2":8},{"diffs":[[0,"s->ixxValid "],[1,"!"],[0,"=="],[-1,"="],[0," true){\n    "]],"start1":9307,"start2":9307,"length1":27,"length2":27},{"diffs":[[0,"    "],[-1,"    return $this->Ixx;\n            }\n            else{\n                return false;\n            }"],[1,"$this->calcStuff();"],[0,"\n   "]],"start1":9338,"start2":9338,"length1":106,"length2":27}]],"length":15294,"saved":false}
{"ts":1356608851227,"patch":[[{"diffs":[[0,"$this->ixxValid "],[-1,"!"],[1,"="],[0,"== true){\n      "]],"start1":9303,"start2":9303,"length1":33,"length2":33}]],"length":15294,"saved":false}
{"ts":1356608856027,"patch":[[{"diffs":[[0,"    "],[-1,"        $this->calcStuff();\n        }\n        \n"],[0,"    "]],"start1":9330,"start2":9330,"length1":55,"length2":8},{"diffs":[[0,")\n            }\n"],[1,"        }\n        \n        \n"],[0,"        \n    }\n "]],"start1":9634,"start2":9634,"length1":32,"length2":60}]],"length":15275,"saved":false}
{"ts":1356608865245,"patch":[[{"diffs":[[0,"is->Yc)\n"],[1,"            }else{\n                return false;\n"],[0,"        "]],"start1":9628,"start2":9628,"length1":16,"length2":65}]],"length":15324,"saved":false}
{"ts":1356608869497,"patch":[[{"diffs":[[0,";\n            }\n"],[1,"        }else{\n            return false;\n"],[0,"        }\n      "]],"start1":9683,"start2":9683,"length1":32,"length2":73}]],"length":15365,"saved":false}
{"ts":1356608889749,"patch":[[{"diffs":[[0,"out the X-X axis"],[1,". Returns nullf"],[0,"\n      * \n      "]],"start1":9110,"start2":9110,"length1":32,"length2":47}]],"length":15380,"saved":false}
{"ts":1356608891932,"patch":[[{"diffs":[[0,"rns "],[-1,"null"],[1,"false i"],[0,"f\n  "]],"start1":9132,"start2":9132,"length1":12,"length2":15}]],"length":15383,"saved":false}
{"ts":1356608893483,"patch":[[{"diffs":[[0,"false if"],[1," cannot cal"],[0,"\n      *"]],"start1":9136,"start2":9136,"length1":16,"length2":27}]],"length":15394,"saved":false}
{"ts":1356608896689,"patch":[[{"diffs":[[0,"nnot cal"],[1,"culate it."],[0,"\n      *"]],"start1":9147,"start2":9147,"length1":16,"length2":26}]],"length":15404,"saved":false}
{"ts":1356608905284,"patch":[[{"diffs":[[0,"($axis ="],[-1,"="],[0," 'neutra"]],"start1":9210,"start2":9210,"length1":17,"length2":16}]],"length":15403,"saved":false}
{"ts":1356608911343,"patch":[[{"diffs":[[0,"his->Yc)"],[1,";"],[0,"\n       "]],"start1":9665,"start2":9665,"length1":16,"length2":17}]],"length":15404,"saved":false}
{"ts":1356608920740,"patch":[[{"diffs":[[0," if($this->i"],[-1,"yy"],[1,"xx"],[0,"Valid "],[-1,"="],[1,"!"],[0,"== true){\n  "]],"start1":10029,"start2":10029,"length1":33,"length2":33},{"diffs":[[0,"        "],[-1,"return $this->Iyy"],[1,"$this->calcStuff()"],[0,";\n      "]],"start1":10064,"start2":10064,"length1":33,"length2":34},{"diffs":[[0,"uff();\n        }"],[-1,"else{"],[0,"\n            $th"]],"start1":10085,"start2":10085,"length1":37,"length2":32},{"diffs":[[0,"    "],[1,"\n"],[0,"    "],[-1,"$this->calcStuff();\n            if($this->iyyValid === true){"],[1,"    if($this->ixxValid === true){\n            if($axis === 'neutral'){\n                //Ixx is stored relative to the neutral axis"],[0,"\n   "]],"start1":10106,"start2":10106,"length1":73,"length2":144},{"diffs":[[0,"$this->I"],[-1,"yy"],[1,"xx"],[0,";\n      "]],"start1":10270,"start2":10270,"length1":18,"length2":18},{"diffs":[[0,"       }"],[-1,"\n            "],[1,"elseif($axis === 'local'){\n                //Convert Ixx to be relative to the loca axis\n                return $this->Ixx + ($this->A * $this->Yc * $this->Yc);\n            }"],[0,"else{\n  "]],"start1":10287,"start2":10287,"length1":29,"length2":190},{"diffs":[[0,";\n            }\n"],[1,"        }else{\n            return false;\n"],[0,"        }\n    \n "]],"start1":10503,"start2":10503,"length1":32,"length2":73}]],"length":15673,"saved":false}
{"ts":1356608923011,"patch":[[{"diffs":[[0,"     if($this->i"],[-1,"xx"],[1,"yy"],[0,"Valid !== true){"]],"start1":10025,"start2":10025,"length1":34,"length2":34}]],"length":15673,"saved":false}
{"ts":1356608926167,"patch":[[{"diffs":[[0,"     if($this->i"],[-1,"xx"],[1,"yy"],[0,"Valid === true){"]],"start1":10114,"start2":10114,"length1":34,"length2":34},{"diffs":[[0," return $this->I"],[-1,"xx"],[1,"yy"],[0,";\n            }e"]],"start1":10262,"start2":10262,"length1":34,"length2":34}]],"length":15673,"saved":false}
{"ts":1356608929384,"patch":[[{"diffs":[[0,"             //I"],[-1,"xx"],[1,"yy"],[0," is stored relat"]],"start1":10189,"start2":10189,"length1":34,"length2":34}]],"length":15673,"saved":false}
{"ts":1356608933014,"patch":[[{"diffs":[[0,"     //Convert I"],[-1,"xx"],[1,"yy"],[0," to be relative "]],"start1":10333,"start2":10333,"length1":34,"length2":34},{"diffs":[[0," return $this->I"],[-1,"xx"],[1,"yy"],[0," + ($this->A * $"]],"start1":10399,"start2":10399,"length1":34,"length2":34}]],"length":15673,"saved":false}
{"ts":1356608935418,"patch":[[{"diffs":[[0,"his->A * $this->"],[-1,"Y"],[1,"X"],[0,"c * $this->Yc);\n"]],"start1":10423,"start2":10423,"length1":33,"length2":33}]],"length":15673,"saved":false}
{"ts":1356608937290,"patch":[[{"diffs":[[0,"is->Xc * $this->"],[-1,"Y"],[1,"X"],[0,"c);\n            "]],"start1":10435,"start2":10435,"length1":33,"length2":33}]],"length":15673,"saved":false}
{"ts":1356613717882,"patch":[[{"diffs":[[0,"is->Ixx + ($this"],[-1,"-"],[0,">"],[1,"-"],[0,"A * $this->Yc * "]],"start1":9629,"start2":9629,"length1":34,"length2":34}]],"length":15673,"saved":false}
